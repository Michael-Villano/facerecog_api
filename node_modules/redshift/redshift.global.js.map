{"version":3,"sources":["webpack:///webpack/bootstrap 008926f7e818266e4269","webpack:///./src/load/global.js","webpack:///./src/load/module.js","webpack:///./src/redshift.js","webpack:///./src/rubix/fire.js","webpack:///./src/rubix/link.js","webpack:///./src/rubix/play.js","webpack:///./src/rubix/run.js","webpack:///./src/rubix/seek.js","webpack:///./src/rubix/track.js","webpack:///./src/routes/values.js","webpack:///./src/routes/css.js","webpack:///./src/routes/attr.js","webpack:///./src/routes/path.js","webpack:///./src/action/action.js","webpack:///./src/action-group/action-group.js","webpack:///./src/action-group/dom.js","webpack:///./src/input/input.js","webpack:///./src/process/process.js","webpack:///./src/action/presets.js","webpack:///./src/utils/easing.js","webpack:///./src/utils/calc.js","webpack:///./src/utils/utils.js","webpack:///./src/action/routes.js","webpack:///./src/core/register-rubix.js","webpack:///./src/core/register-simulation.js","webpack:///./src/action/simulate.js","webpack:///./src/routes/css/build.js","webpack:///./src/routes/css/split.js","webpack:///./src/routes/path/builder.js","webpack:///./src/action/parse-args.js","webpack:///./src/types/value.js","webpack:///./src/action/queue.js","webpack:///./src/action/processor.js","webpack:///./src/defaults/action-props.js","webpack:///./src/defaults/action-state.js","webpack:///./src/routes/css/styler.js","webpack:///./src/action-group/generate-iterator.js","webpack:///./src/utils/history.js","webpack:///./src/process/manager.js","webpack:///./src/types/bezier.js","webpack:///./src/core/routes.js","webpack:///./src/core/rubix.js","webpack:///./src/core/simulations.js","webpack:///./src/routes/css/dictionary.js","webpack:///./src/routes/css/templates.js","webpack:///./src/routes/css/lookup.js","webpack:///./src/routes/css/default-property.js","webpack:///./src/routes/css/splitters.js","webpack:///./src/routes/path/lookup.js","webpack:///./src/input/pointer.js","webpack:///./src/defaults/value-props.js","webpack:///./src/defaults/value-state.js","webpack:///./src/utils/resolve.js","webpack:///./src/process/loop.js","webpack:///./src/process/timer.js","webpack:///./src/process/tick.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wC;;;;;;;;;;ACtCA,6D;;;;;;;;;ACAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,2B;;;;;;;;;ACnBA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,G;;;;;;;;;ACvJA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,G;;;;;;;;;AC7BA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE;AAChE;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;;;;;;;;;ACnGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC/EA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,G;;;;;;;;;ACxEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;;;;AC9BA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,G;;;;;;;;;AC5CA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA,G;;;;;;;;;ACnCA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA,G;;;;;;;;;ACvBA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;;;;ACbA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,G;;;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wCAAuC;AACvC,+BAA8B;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAqC;AACrC;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;;AAEA,wBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;AACT;AACA;;AAEA;AACA,MAAK;;;AAGL;AACA;;AAEA;AACA,MAAK;;;AAGL;AACA;AACA;AACA,kCAAiC;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,yB;;;;;;;;;ACngBA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAO;AACP,kCAAiC,mBAAmB;AACpD;AACA;AACA;;AAEA;AACA;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,8B;;;;;;;;;AC/EA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;AACL;;AAEA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA,QAAO,iBAAiB;AACxB;AACA;AACA,IAAG;AACH;;AAEA;AACA,G;;;;;;;;;ACjCA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;;AAEA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,wB;;;;;;;;;AC7HA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;ACrMA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAc,gBAAgB;AAC9B;AACA;;AAEA;AACA,MAAK;;AAEL,qBAAoB;AACpB;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAwB;AACxB;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA,uBAAsB;AACtB,0BAAyB;AACzB;AACA;AACA;;AAEA,eAAc,gBAAgB;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,gC;;;;;;;;;AChFA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;;AAGT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;;AAGT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,WAAU,OAAO;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;;;;AC9MA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;;AAGT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;;AAGT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;;AAGT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;;AAGT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iE;AACA,UAAS;;;AAGT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;;;;AChWA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,8C;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,0C;AACA,MAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,YAAY;AACnC;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA,yBAAwB;;AAExB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,G;;;;;;;;;AC/OA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,eAAe;AACjC;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;AC/DA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,E;;;;;;;;;ACrBA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,E;;;;;;;;;ACTA;;AAEA;;AAEA;AACA;;AAEA;AACA,G;;;;;;;;;ACRA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAU,cAAc;AACxB;AACA;;AAEA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,G;;;;;;;;;ACrDA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,+BAA8B;AAC9B,0BAAyB;AACzB;AACA;AACA;;AAEA;AACA,mBAAkB,wBAAwB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,G;;;;;;;;;ACtGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,G;;;;;;;;;ACvDA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAc,gBAAgB;AAC9B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAa;AACb;;AAEA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;;AAEA;AACA,wBAAuB,gBAAgB;;AAEvC;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA,G;;;;;;;;;ACpIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAkB,aAAa;AAC/B,mBAAkB,aAAa,GAAG,cAAc;AAChD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;AChJA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;AC/CA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAU,iBAAiB;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,G;;;;;;;;;ACtHA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,G;;;;;;;;;AChDA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,G;;;;;;;;;ACrBA;;AAEA;AACA;AACA;AACA;AACA,aAAY;;AAEZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,oBAAoB;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kC;;;;;;;;;AC9DA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQ,gBAAgB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;AC/BA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,0B;;;;;;;;;ACpEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,iBAAiB;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uC;;;;;;;;;ACzKA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,8BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;;AAEjB;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA,uBAAsB,uBAAuB;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAa;;;AAGb;AACA,gCAA+B,yBAAyB;AACxD;AACA;AACA,cAAa;;;AAGb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,kEAAkE;AACxF;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;;AAEA;AACA,kBAAiB;AACjB;;AAEA,kBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,yB;;;;;;;;;;ACrKA,qB;;;;;;;;;ACAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qB;;;;;;;;;AChDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;;;;ACzFA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAU,yBAAyB;AACnC;AACA;AACA,EAAC;;AAED,wB;;;;;;;;;AC7CA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA,wBAAuB,iBAAiB;AACxC;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA,4B;;;;;;;;;ACnEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,G;;;;;;;;;ACvCA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL,eAAc;AACd;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2B;;;;;;;;;AC1CA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAiC;AACjC,+BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,gBAAgB;AAClC;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;AACA,4BAA2B;AAC3B,+BAA8B;AAC9B,sCAAqC;AACrC,0CAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,cAAc;AAChC;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;AACA,wCAAuC;AACvC,mCAAkC;AAClC,8BAA6B;AAC7B,4BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,OAAO;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;AACA,iCAAgC;AAChC,+BAA8B;AAC9B,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,eAAe;AACjC;;AAEA;AACA;AACA;AACA;;AAEA,kBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA,4B;;;;;;;;;ACrOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;;;;ACXA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;ACxFA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,G;;;;;;;;;AC5GA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,G;;;;;;;;;ACZA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,G;;;;;;;;;AC/CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,6B;;;;;;;;;ACpEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;AC7BA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;;AAEA;AACA,O;;AAEA,EAAC;AACD;AACA;;AAEA,uB","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 008926f7e818266e4269\n **/","window.redshift = require('./module.js');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/load/global.js\n ** module id = 0\n ** module chunks = 0\n **/","\"use strict\";\n\nvar redshift = require('../redshift.js');\n\nredshift\n    // Add default Rubix processor modules\n    .addRubix('fire',   require('../rubix/fire.js'))\n    .addRubix('link',   require('../rubix/link.js'))\n    .addRubix('play',   require('../rubix/play.js'))\n    .addRubix('run',    require('../rubix/run.js'))\n    .addRubix('seek',   require('../rubix/seek.js'))\n    .addRubix('track',  require('../rubix/track.js'))\n    \n    // Add DOM value routes\n    .addRoute('values', require('../routes/values.js'))\n    .addRoute('css',    require('../routes/css.js'))\n    .addRoute('attr',   require('../routes/attr.js'))\n    .addRoute('path',   require('../routes/path.js'));\n\nmodule.exports = redshift;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/load/module.js\n ** module id = 1\n ** module chunks = 0\n **/","/*\n    Redshift core object\n    \n    Exposes methods to create new classes and define new modules\n*/\n\"use strict\";\n\nvar Action = require('./action/action.js'),\n    ActionGroup = require('./action-group/action-group.js'),\n\tdomGroup = require('./action-group/dom.js'),\n    Input = require('./input/input.js'),\n    Process = require('./process/process.js'),\n    presets = require('./action/presets.js'),\n    easing = require('./utils/easing.js'),\n    calc = require('./utils/calc.js'),\n    utils = require('./utils/utils.js'),\n    route = require('./action/routes.js'),\n    registerRubix = require('./core/register-rubix.js'),\n    registerSimulation = require('./core/register-simulation.js');\n\nmodule.exports = {\n\n    /*\n        Create a new Action controller\n        \n        @return [Action]: Newly-created Action\n    */\n    newAction: function (props) {\n        return (utils.isArray(props)) ? new ActionGroup(props) : new Action(props);\n    },\n    \n    /*\n        Create a new Input controller\n        \n        @return [Input]: Newly-created Input\n    */\n    newInput: function () {\n        return new Input(arguments[0], arguments[1]);\n    },\n    \n    /*\n        Create a new process\n        \n        @param [function]: Function to run every frame\n        @param: Scope\n        @return [Process]\n    */\n    newProcess: function () {\n        return new Process(arguments[0], arguments[1]);\n    },\n    \n    /*\n\t    Create an Action Group prepopulated with DOM properties\n\t    \n\t    @param [string || NodeList || jQuery]: Selector, nodeList or jQuery selection\n    */\n    dom: function (selector) {\n\t    return domGroup(selector);\n    },\n    \n    /*\n        Define a new Action preset\n        \n        Syntax\n        \n            .definePreset(name, preset)\n                @param [string]: Name of preset\n                @param [object]: Preset options/properties\n                \n            .definePreset(presets)\n                @param [object]: Multiple presets as named object\n                \n        @return [Redshift]\n    */\n    addPreset: function () {\n        presets.add.apply(presets, arguments);\n        \n        return this;\n    },\n\n    /*\n        Add bezier curve function\n        \n        Add the specified bezier curve the EasingFunction's available easings\n        My favourite bezier curve generator is Lea Verou's excellent http://cubic-bezier.com/\n        \n        @param [string]: Name of the new easing function \n        @params [number]: x/y coordinates of handles\n    */\n    addBezier: function () {\n        easing.add.apply(easing, arguments);\n        \n        return this;\n    },\n    \n    /*\n        Add value route\n        \n        The default values object is .values, however any provided object\n        will be parsed into values and given a .route property that is the name of\n        its original object. For instance providing\n        \n            example: {\n                test: 20\n            }\n            \n        will be parsed into\n        \n            values: {\n                test: {\n                    current: 20,\n                    route: 'example'\n                }\n            }\n            \n        If we provide a custom route with this name, we can custom-parse values\n        on the way in, and also on the way out.\n    */\n    addRoute: function () {\n        route.add.apply(route, arguments);\n        \n        return this;\n    },\n    \n    /*\n        Add simulation\n        \n        @param [string]: Simulation name\n        @param [function]: Method to calculate new velocity\n    */\n    addSimulation: function () {\n        registerSimulation.apply(this, arguments);\n        \n        return this;\n    },\n    \n    /*\n        Add Rubix\n        \n        @param [string]: Rubix name\n        @param [object]: Methods and properties\n    */\n    addRubix: function () {\n        registerRubix.apply(this, arguments);\n        \n        return this;\n    },\n    \n    // Expose calc and utils modules\n    calc: calc,\n    utils: utils\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/redshift.js\n ** module id = 2\n ** module chunks = 0\n **/","/*\n    Return current value and immedietly end\n*/\n\"use strict\";\n\nmodule.exports = {\n\n   /*\n        Process new value\n        \n        Return existing current\n        \n        @param [string]: Name of value\n        @param [Value]: Current value\n    */\n    process: function (key, value) {\n        return value.current;\n    },\n    \n    /*\n        Has Action ended?\n        \n        Returns true to end immedietly\n        \n        @return [boolean]: true\n    */\n    hasEnded: function () {\n        return true;\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/rubix/fire.js\n ** module id = 3\n ** module chunks = 0\n **/","/*\n    Link the calculations of on Value into the output of another.\n    \n    Activate by setting the link property of one value with the name\n    of either an Input property or another Value.\n    \n    Map the linked value with mapLink and provide a corressponding mapTo\n    array to translate values from one into the other. For instance:\n    \n    {\n        link: 'x',\n        mapLink: [0, 100, 200],\n        mapTo: [-100, 0, -100]\n    }\n    \n    An output value of 50 from 'x' will translate to -50 for this Value\n*/\n\"use strict\";\n\nvar calc = require('../utils/calc.js'),\n\n    STRING = 'string',\n    \n    /*\n        Translate our mapLink value into mapTo\n        \n        @param [number]: Calculated value from linked value\n        @param [Value || object]: Linked value or empty object if we're linking to input\n        @param [array]: List of numbers relating to linked value\n        @param [array]: List of numbers relating to this value\n    */\n    findMappedValue = function (newValue, linkedValue, toValue, mapLink, mapTo) {\n        var mapLength = mapLink.length,\n            i = 1,\n            lastLinkValue,\n            thisLinkValue,\n            lastToValue,\n            thisToValue;\n\n        for (; i < mapLength; i++) {\n            // Assign values from array, or if they're strings, look for them in linkedValue\n            lastLinkValue = (typeof mapLink[i - 1] === STRING) ? linkedValue[mapLink[i - 1]] : mapLink[i - 1];\n            thisLinkValue = (typeof mapLink[i] === STRING) ? linkedValue[mapLink[i]] : mapLink[i];\n            lastToValue = (typeof mapTo[i - 1] === STRING) ? toValue[mapTo[i - 1]] : mapTo[i - 1];\n            thisToValue = (typeof mapTo[i] === STRING) ? toValue[mapTo[i]] : mapTo[i];\n\n            // Check if we've gone past our calculated value, or if we're at the end of the array\n            if (newValue < thisLinkValue || i === mapLength - 1) {\n                newValue = calc.value(calc.restricted(calc.progress(newValue, lastLinkValue, thisLinkValue), 0, 1), lastToValue, thisToValue);\n                break;\n            }\n        }\n        \n        return newValue;\n    };\n\nmodule.exports = {\n\n    surpressMethod: true,\n\n    /*\n        Process this value\n        \n        First check if this value exists as a Value, if not\n        check within Input (if we have one)\n            \n        @param [string]: Key of current value\n        @param [Value]: Current value\n        @param [object]: Collection of all Action values\n        @param [object]: Action properties\n        @param [Action]: Current Action\n        @return [number]: Calculated value\n    */\n    process: function (key, value, values, action) {\n        var newValue = value.current,\n            linkKey = value.link,\n            linkedValue = values[linkKey] ? values[linkKey] : {},\n            inputOffset = action.inputOffset;\n            \n        // Then check values in Input\n        if (inputOffset && inputOffset.hasOwnProperty(linkKey)) {\n            newValue = value.origin + (inputOffset[linkKey] * value.amp);\n            \n        // First look at Action and check value isn't linking itself\n        } else if (linkedValue.current !== undefined && key !== linkKey) {\n            newValue = linkedValue.current;\n        }\n\n        // If we have mapLink and mapTo properties, translate the new value\n        if (value.mapLink && value.mapTo) {\n            newValue = findMappedValue(newValue, linkedValue, value, value.mapLink, value.mapTo);\n        }\n\n        return newValue;\n    },\n        \n    limit: function (output, value) {\n        return calc.restricted(output, value.min, value.max);\n    }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/rubix/link.js\n ** module id = 4\n ** module chunks = 0\n **/","/*\n    Play rubix\n    \n    Translate numbers for a set amount of time, applying easing if defined\n*/\n\"use strict\";\n\nvar calc = require('../utils/calc.js'),\n    easing = require('../utils/easing.js'),\n    utils = require('../utils/utils.js'),\n    \n    CURRENT = 'current',\n    HAS_ENDED = 'hasEnded';\n\nmodule.exports = {\n\n    /*\n        Update Action elapsed time\n        \n        @param [Action]\n        @param [object]: Action properties\n        @param [number]: Timestamp of current frame\n    */\n    updateInput: function (action, frameDuration) {\n        action.elapsed += (frameDuration * action.dilate) * action.playDirection;\n        action[HAS_ENDED] = true;\n    },\n\n    /*\n        Calculate progress of value based on time elapsed,\n        value delay/duration/stagger properties\n\n        @param [string]: Key of current value\n        @param [Value]: Current value\n        @param [object]: Collection of all Action values\n        @param [object]: Action properties\n        @param [Action]: Current Action\n        @param [number]: Duration of frame in ms\n        @return [number]: Calculated value\n    */\n    process: function (key, value, values, action) {\n        var target = value.to,\n            newValue = value[CURRENT],\n            progress, progressTarget;\n        \n        // If we have a target, process\n        if (target !== undefined) {\n            progress = calc.restricted(calc.progress(action.elapsed - value.delay, value.duration) - value.stagger, 0, 1);\n            progressTarget = (action.playDirection === 1) ? 1 : 0;\n\n            // Mark Action as not ended if still in progress\n            if (progress !== progressTarget) {\n                action[HAS_ENDED] = false;\n            \n            // Or clear value target\n            } else {\n                value.to = undefined;\n            }\n            \n            // Step progress if we're stepping\n            if (value.steps) {\n                progress = utils.stepProgress(progress, value.steps, value.stepDirection);\n            }\n            \n            // Ease value with progress\n            newValue = easing.withinRange(progress, value.origin, target, value.ease);\n        }\n        \n        return newValue;\n    },\n    \n    /*\n        Return hasEnded property\n        \n        @param [boolean]: Have all Values hit 1 progress?\n    */\n    hasEnded: function (action) {\n        return action[HAS_ENDED];\n    }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/rubix/play.js\n ** module id = 5\n ** module chunks = 0\n **/","/*\n    Run physics simulation\n*/\n\"use strict\";\n\nvar calc = require('../utils/calc.js'),\n    simulate = require('../action/simulate.js');\n\nmodule.exports = {\n\n    // [boolean]: Tell Redshift this rubix calculates a new velocity itself\n    calculatesVelocity: true,\n    \n    /*\n        Simulate the Value's per-frame movement\n        \n        @param [string]: Key of current value\n        @param [Value]: Current value\n        @param [object]: Collection of all Action values\n        @param [object]: Action properties\n        @param [Action]: Current Action\n        @param [number]: Duration of frame in ms\n        @return [number]: Calculated value\n    */\n    process: function (key, value, values, action, frameDuration) {\n        value.velocity = simulate(value.simulate, value, frameDuration, action.started);\n        return value.current + calc.speedPerFrame(value.velocity, frameDuration);\n    },\n    \n    /*\n        Has this action ended?\n        \n        Use a framecounter to see if Action has changed in the last x frames\n        and declare ended if not\n        \n        @param [Action]\n        @param [boolean]: Has Action changed?\n        @return [boolean]: Has Action ended?\n    */\n    hasEnded: function (action, hasChanged) {\n        action.inactiveFrames = hasChanged ? 0 : action.inactiveFrames + 1;\n        return (action.inactiveFrames > action.maxInactiveFrames);\n    },\n    \n    /*\n        Limit output to value range, if any\n        \n        If velocity is at or more than range, and value has a bounce property,\n        run the bounce simulation\n        \n        @param [number]: Calculated output\n        @param [Value]: Current Value\n        @return [number]: Limit-adjusted output\n    */\n    limit: function (output, value) {\n        var isOutsideMax = (output >= value.max),\n            isOutsideMin = (output <= value.min),\n            isOutsideRange = isOutsideMax || isOutsideMin;\n        \n        if (isOutsideRange) {\n            output = calc.restricted(output, value.min, value.max);\n\n            if (value.bounce) {\n                value.velocity = simulate('bounce', value);\n\n            } else if (value.capture) {\n                simulate('capture', value, isOutsideMax ? value.max : value.min);\n            }\n        }\n        \n        return output;\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/rubix/run.js\n ** module id = 6\n ** module chunks = 0\n **/","/*\n    Return current value and immedietly end\n*/\n\"use strict\";\n\nvar playRubix = require('./play.js');\n\nmodule.exports = {\n\n   /*\n        Process new value\n        \n        Return existing current\n        \n        @param [string]: Name of value\n        @param [Value]: Current value\n    */\n    process: playRubix.process,\n    \n    /*\n        Has Action ended?\n        \n        Returns true to end animation, and sets rubix to 'play'\n        \n        @return [boolean]: true\n    */\n    hasEnded: function (action) {\n        action.rubix = 'play';\n        return true;\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/rubix/seek.js\n ** module id = 7\n ** module chunks = 0\n **/","/*\n    Track user input\n*/\n\"use strict\";\n\nvar calc = require('../utils/calc.js'),\n\n    CURRENT = 'current',\n    INPUT_OFFSET = 'inputOffset';\n\nmodule.exports = {\n    \n    /*\n        Update Input\n        \n        @param [Action]\n        @param [object]: Action properties\n    */\n    updateInput: function (action) {\n        action[INPUT_OFFSET] = calc.offset(action.inputOrigin, action.input[CURRENT]);\n    },\n        \n    /*\n        Move Value relative to Input movement\n        \n        @param [string]: Key of current value\n        @param [Value]: Current value\n        @param [object]: Collection of all Action values\n        @param [object]: Action properties\n        @param [Action]: Current Action\n        @return [number]: Calculated value\n    */\n    process: function (key, value, values, action) {\n        return (action[INPUT_OFFSET].hasOwnProperty(key)) ? value.origin + action[INPUT_OFFSET][key] : value[CURRENT];\n    },\n    \n    /*\n        Has this Action ended? \n        \n        @return [boolean]: False to make user manually finish .track()\n    */\n    hasEnded: function () {\n        return false;\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/rubix/track.js\n ** module id = 8\n ** module chunks = 0\n **/","/*\n    Values route (Redshift default)\n    \n    Handles raw values and outputs to user-defined callbacks\n*/\n\"use strict\";\n\nvar fireCallback = function (name, bucket, action) {\n        if (action[name]) {\n            action[name].call(action.scope, bucket);\n        }\n    };\n\nmodule.exports = {\n    \n    makeDefault: true,\n    \n    onStart: function (bucket, action) {\n        if (action.onStart) {\n            action.onStart.call(action.scope);\n        }\n    },\n    \n    onFrame: function (bucket, action, values) {\n        fireCallback('onFrame', bucket, action, values);\n    },\n    \n    onChange: function (bucket, action, values) {\n        fireCallback('onChange', bucket, action, values);\n    },\n    \n    onEnd: function (bucket, action, values) {\n        fireCallback('onEnd', bucket, action, values);\n    }\n    \n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/values.js\n ** module id = 9\n ** module chunks = 0\n **/","\"use strict\";\n\nvar build = require('./css/build.js'),\n    split = require('./css/split.js'),\n    \n    css = 'css',\n    cssOrder = css + 'Order',\n    cssCache = css + 'Cache';\n\nmodule.exports = {\n    preprocess: function (key, value, action) {\n        var values = split(key, value, action);\n        \n        action.updateOrder(key, false, cssOrder);\n        \n        return values;\n    },\n    \n    onChange: function (output, action, values) {\n        action[cssCache] = action[cssCache] || {};\n        action.style(build(output, action[cssOrder],  action[cssCache], values));\n    }\n    \n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/css.js\n ** module id = 10\n ** module chunks = 0\n **/","\"use strict\";\n\nmodule.exports = {\n\n    onChange: function (output, action) {\n        var dom = action.dom;\n\n        if (dom) {\n            for (var key in output) {\n                dom.setAttribute(key, output[key]);\n            }\n        }\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/attr.js\n ** module id = 11\n ** module chunks = 0\n **/","\"use strict\";\n\nvar createStyles = require('./path/builder.js');\n\nmodule.exports = {\n\n    onStart: function (bucket, action) {\n        if (action.dom) {\n            action.pathLength = action.dom.getTotalLength();\n        }\n    },\n    \n    onChange: function (output, action) {\n        action.style(createStyles(output, action.pathLength));\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/path.js\n ** module id = 12\n ** module chunks = 0\n **/","\"use strict\";\n\nvar parseArgs = require('./parse-args.js'),\n    Value = require('../types/value.js'),\n    Queue = require('./queue.js'),\n    Process = require('../process/process.js'),\n    processor = require('./processor.js'),\n    routes = require('./routes.js'),\n    defaultProps = require('../defaults/action-props.js'),\n    defaultState = require('../defaults/action-state.js'),\n    utils = require('../utils/utils.js'),\n    styler = require('../routes/css/styler.js'),\n\n    namespace = function (key, space) {\n        return (space && space !== routes.defaultRoute) ? key + '.' + space : key;\n    },\n\n    Action = function () {\n        var self = this;\n        \n        // Create value repo\n        self.values = {};\n\n        this.scope = this;\n        self.setProp(defaultState);\n        self.resetProps();\n\n        // Register process wth cycl\n        self.process = new Process(function (framestamp, frameDuration) {\n            if (self.isActive()) {\n                processor(self, framestamp, frameDuration);\n            }\n        });\n        \n        self.queue = new Queue();\n        self.output = {};\n\n        self.set(parseArgs.generic.apply(self, arguments));\n    };\n\nAction.prototype = {\n\n    /*\n        Play the provided actions as animations\n        \n        Syntax\n            .play(playlist, [override])\n                @param [string]: Playlist of presets\n                @param [object]: (optional) Override object\n                \n            .play(params)\n                @param [object]: Action properties\n                \n            .play(params, [duration, easing, onEnd])\n                @param [object]: Action props\n                @param [number]: Duration in ms\n                @param [string]: Easing function to apply\n                @param [function]: Function to run on end\n                \n        @return [Action]\n    */\n    play: function () {\n        var props = parseArgs.play.apply(this, arguments);\n\n        if (!this.isActive()) {\n            this.set(props, 'to');\n            this.start('play');\n        } else {\n            this.queue.add.apply(this.queue, arguments);\n        }\n\n        return this;\n    },\n    \n    /*\n        Set Action values and properties\n        \n        Syntax\n            .set(params)\n                @param [object]: Action properties\n            \n        @return [Action]\n    */\n    set: function (props, defaultProp) {\n        var self = this;\n        \n        // Reset properties to defaults\n        this.resetProps();\n\n        // Remove current values from order list\n        this.clearOrder();\n\n        // Update current properties\n        this.setProp(props);\n        \n        // Set default property to current if it isn't set\n        defaultProp = defaultProp || 'current';\n        \n        // Loop over values and update\n        routes.shard(function (route, routeValues) {\n            var preprocessedValues = {},\n                valueBase = {},\n                value,\n                base = {\n                    route: route.name\n                };\n\n            for (var key in routeValues) {\n                if (routeValues.hasOwnProperty(key)) {\n                    value = routeValues[key];\n\n                    if (!utils.isObj(value)) {\n                        valueBase = { name: key };\n                        valueBase[defaultProp] = value;\n                    } else {\n                        valueBase = value;\n                        valueBase.name = key;\n                    }\n                    \n                    valueBase = utils.merge(base, valueBase);\n\n                    // If no preprocess step, assign directly\n                    if (!route.preprocess) {\n                        self.setValue(key, valueBase, props, route.name, true);\n                        \n                    // Else preprocess and add each returned value\n                    } else {\n                        preprocessedValues = route.preprocess(key, valueBase, self, props);\n\n                        for (var subKey in preprocessedValues) {\n                            self.setValue(subKey, preprocessedValues[subKey], props, route.name, true);\n                        }\n                    }\n                }\n            }\n        }, props);\n        \n        self.resetOrigins();\n\n        return self;\n    },\n    \n    /*\n        Loop through all values and create origin points\n    */\n    resetOrigins: function () {\n        var values = this.values,\n            key = '';\n\n        for (key in values) {\n            if (values.hasOwnProperty(key)) {\n                values[key].origin = values[key].current;\n            }\n        }\n    },\n\n    /*\n        Start Action\n\n        @param [string]: Name of processing type to use\n        @return [Action]\n    */\n    start: function (processType) {\n        var input = this.input;\n\n        this.resetProgress();\n        \n        if (processType) {\n            this.rubix = processType;\n        }\n        \n        if (processType !== 'track' && input && input.stop) {\n            input.stop();\n        }\n        \n        this.activate();\n\n        return this;\n    },\n    \n    /*\n        Stop current Action process\n    */\n    stop: function () {\n        this.queue.clear();\n        this.pause();\n        return this;\n    },\n    \n    /*\n        Pause current Action\n    */\n    pause: function () {\n        var self = this,\n            input = this.input;\n\n        self.isActive(false);\n        self.process.stop();\n\n        if (input && input.stop) {\n            input.stop();\n        }\n\n        return self;\n    },\n    \n    /*\n        Move playhead to a specific location\n        \n        @param [number]: 0-1\n    */\n    seek: function (seekTo) {\n        this.elapsed = this.duration * seekTo;\n        \n        if (!this.isActive()) {\n            this.rubix = 'seek';\n            this.activate();\n        }\n        \n        return this;\n    },\n    \n    activate: function () {\n        this.isActive(true);\n        this.started = utils.currentTime() + this.delay;\n        this.framestamp = this.started;\n        this.firstFrame = true;\n        \n        this.process.start();\n    },\n    \n    /*\n        Resume a paused Action\n    */\n    resume: function () {\n        var self = this;\n        \n        self.started = utils.currentTime();\n        self.framestamp = self.started;\n        self.isActive(true);\n        \n        self.process.start();\n        \n        return self;\n    },\n    \n    /*\n        Reset Action progress and values\n    */\n    reset: function () {\n        var self = this,\n            values = self.values;\n\n        self.resetProgress();\n        \n        for (var key in values) {\n            values[key].reset();\n        }\n        \n        return self;\n    },\n    \n    /*\n        Reset Action progress\n    */\n    resetProgress: function () {\n        this.elapsed = (this.playDirection === 1) ? 0 : this.duration;\n        this.started = utils.currentTime();\n        \n        return this;\n    },\n    \n    /*\n        Reverse Action progress and values\n    */\n    reverse: function () {\n        var values = this.values;\n\n        this.playDirection = this.playDirection * -1;\n        \n        for (var key in values) {\n            if (values.hasOwnProperty(key)) {\n                values[key].retarget();\n            }\n        }\n\n        return this;\n    },\n    \n    /*\n        Swap value origins and to\n    */\n    flipValues: function () {\n        var values = this.values;\n            \n        this.elapsed = this.duration - this.elapsed;\n        \n        for (var key in values) {\n            values[key].flip();\n        }\n\n        return this;\n    },\n    \n    toggle: function () {\n        if (this.isActive()) {\n            this.pause();\n        } else {\n            this.resume();\n        }\n        \n        return this;\n    },\n    \n    /*\n        Check for next steps and perform, stop if not\n    */\n    next: function () {\n        var self = this,\n            nexts = [{\n                key: 'loop',\n                callback: self.reset\n            }, {\n                key: 'yoyo',\n                callback: self.reverse\n            }, {\n                key: 'flip',\n                callback: self.flipValues\n            }],\n            possibles = nexts.length,\n            hasNext = false;\n            \n        for (var i = 0; i < possibles; ++i) {\n            if (self.checkNextStep(nexts[i].key, nexts[i].callback)) {\n                hasNext = true;\n                break;\n            }\n        }\n\n        if (!hasNext && !self.playNext()) {\n            self.stop();\n        } else {\n            self.isActive(true);\n        }\n        \n        return self;\n    },\n    \n    /*\n        Check next step\n        \n        @param [string]: Name of step ('yoyo' or 'loop')\n        @param [callback]: Function to run if we take this step\n    */\n    checkNextStep: function (key, callback) {\n        var COUNT = 'Count',\n            stepTaken = false,\n            step = this[key],\n            count = this[key + COUNT],\n            forever = (step === true);\n\n        if (forever || utils.isNum(step)) {\n            ++count;\n            this[key + COUNT] = count;\n            if (forever || count <= step) {\n                callback.call(this);\n                stepTaken = true;\n            }\n        }\n\n        return stepTaken;\n    },\n    \n    /*\n        Next in playlist\n    */\n    playNext: function () {\n        var stepTaken = false,\n            nextInQueue = this.queue.next(this.playDirection);\n\n        if (utils.isArray(nextInQueue)) {\n            this.set(parseArgs.generic.apply(this, nextInQueue), 'to')\n                .reset();\n\n            stepTaken = true;\n        }\n\n        return stepTaken;\n    },\n    \n    setValue: function (key, value, inherit, space, reset) {\n        var existing = this.getValue(key, space);\n        \n        key = namespace(key, space);\n\n        // Update if value exists\n        if (existing) {\n            // Overwrite with defaults\n            if (reset) {\n                existing.resetProps();\n            }\n\n            existing.set(value, inherit);\n\n        // Or create new if it doesn't\n        } else {\n            this.values[key] = new Value(key, value, inherit, this);\n        }\n\n        return this;\n    },\n    \n    \n    getValue: function (key, space) {\n        key = namespace(key, space);\n\n        return this.values[key];\n    },\n    \n    \n    setProp: function (data, prop) {\n        var multiArg = (arguments.length > 1),\n            defaultRoute = routes.getName(),\n            toSet = multiArg ? {} : data,\n            key = '';\n        \n        // If this is a key/value setter, add to toSet\n        if (multiArg) {\n            toSet[data] = prop;\n        }\n        \n        // Loop over toSet and assign to our data store\n        for (key in toSet) {\n            if (toSet.hasOwnProperty(key) && key != defaultRoute) {\n                this[key] = toSet[key];\n            }\n        }\n\n        return this;\n    },\n    \n    resetProps: function () {\n        this.setProp(defaultProps);\n        return this;\n    },\n    \n    /*\n        Is Action active?\n        \n        @param [boolean] (optional): If provided, will set action to active/inactive\n        @return [boolean]: Active status\n    */\n    isActive: function (active) {\n        var isActive = (active !== undefined) ? active : this.active;\n        \n        if (active === true) {\n            this.hasChanged = active;\n        }\n\n        this.active = isActive;\n\n        return isActive;\n    },\n    \n    /*\n        Update order of value keys\n        \n        @param [string]: Key of value\n        @param [boolean]: Whether to move value to back\n        @param [string] (optional): Name of order array (if not default)\n    */\n    updateOrder: function (key, moveToBack, orderName) {\n        var pos, order;\n\n        orderName = orderName || 'order';\n        order = this[orderName] = this[orderName] || [];\n        pos = order.indexOf(key);\n        \n        if (pos === -1 || moveToBack) {\n            order.push(key);\n            \n            if (pos !== -1) {\n                order.splice(pos, 1);\n            }\n        }\n    },\n    \n    clearOrder: function () {\n        this.order = [];\n    },\n    \n    /*\n        Style our dom element\n        \n        Becomes get if props is string, set if object\n    */\n    style: function (name, props) {\n        var elementIsDefined = (arguments.length === 2),\n            dom,\n            returnVal;\n        \n        props = elementIsDefined ? props : name;\n        name = elementIsDefined ? name : 'dom';\n    \n        dom = this[name];\n        \n        if (dom) {\n            returnVal = styler(dom, props);\n        }\n\n        return (returnVal === false) ? this : returnVal;\n    }\n    \n};\n\nmodule.exports = Action;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/action/action.js\n ** module id = 13\n ** module chunks = 0\n **/","\"use strict\";\n\nvar Action = require('../action/action.js'),\n\tgenerateMethodIterator = require('./generate-iterator.js'),\n\t\n\tdefaultDuration = 250,\n\tdefaultEase = 'linear',\n\n\t/*\n\t\tAction group constructor\n\t*/\n\tActionGroup = function (actions) {\n\t\tthis.actions = actions || [];\n\t},\n\t\n\tactionGroupPrototype = ActionGroup.prototype;\n\n/*\n\tStagger the execution of the provided Action method\n\t\n\t@param [string]: Name of Action method to call\n\t@param [number] (optional): Duration between method calls\n\t@param [string || object] (optional): Argument to pass method\n\t@param [string] (optional): Easing\n*/\nactionGroupPrototype.stagger = function (method, duration, props, ease) {\n\tvar self = this,\n\t\tnumActions = this.actions.length,\n\t\ti = -1;\n\t\n\tthis._stagger = this._stagger || new Action();\n\tduration = duration || defaultDuration;\n\tease = ease || defaultEase;\n\n\tthis._stagger.stop().play({\n\t\tvalues: {\n\t\t\ti: {\n\t\t\t\tcurrent: i,\n\t\t\t\tto: numActions - 1\n\t\t\t}\n\t\t},\n\t\tround: true,\n\t\tonChange: function (output) {\n\t\t    var newIndex = output.i;\n\t\t    \n\t\t    // If our new index is only one more than the last\n\t\t    if (newIndex === i + 1) {\n\t\t        self.actions[newIndex][method](props);\n\t\t        \n\t\t    // Or it's more than one more than the last, so fire all indecies\n\t\t    } else {\n    \t\t    for (var index = i + 1; index <= newIndex; index++) {\n\t\t            self.actions[index][method](props);\n    \t\t    }\n\t\t    }\n\n\t\t    i = newIndex;\n\t\t}\n\t}, duration * numActions, ease);\n\t\n\treturn this;\n};\n\n/*\n\tAdd a new Action to the group\n\t\n\t@param [object]: Action properties\n*/\nactionGroupPrototype.add = function (props) {\n\tthis.actions.push(new Action(props));\n};\n\n// Initialise Action Group methods\n(function () {\n\tfor (var method in Action.prototype) {\n\t\tactionGroupPrototype[method] = generateMethodIterator(method);\n\t}\n})();\n\nmodule.exports = ActionGroup;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/action-group/action-group.js\n ** module id = 14\n ** module chunks = 0\n **/","\"use strict\";\n\nvar ActionGroup = require('./action-group.js');\n\nmodule.exports = function (selector) {\n    var actionGroup = new ActionGroup(),\n    \telements = [],\n    \tnumElements = 0,\n    \ti = 0,\n    \tdomSelection = (typeof selector === 'string') ? document.querySelectorAll(selector) : selector;\n    \t\n    // if jQuery selection, get Array\n    if (domSelection.get) {\n\t    elements = domSelection.get();\n\t    \n\t// Or convert NodeList to Array\n    } else if (domSelection.length) {\n\t    elements = [].slice.call(domSelection);\n\t    \n\t// Or put Element into array\n    } else {\n\t    elements.push(domSelection);\n    }\n    \n\tnumElements = elements.length;\n\t\n\tfor (; i < numElements; i++) {\n\t\tactionGroup.add({\n\t\t\tdom: elements[i]\n\t\t});\n\t}\n\n\treturn actionGroup;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/action-group/dom.js\n ** module id = 15\n ** module chunks = 0\n **/","/*\n    Input controller\n*/\n\"use strict\";\n\nvar calc = require('../utils/calc.js'),\n    utils = require('../utils/utils.js'),\n    History = require('../utils/history.js'),\n\n    /*\n        Input constructor\n        \n            Syntax\n                newInput(name, value[, poll])\n                    @param [string]: Name of to track\n                    @param [number]: Initial value\n                    @param [function] (optional): Function to poll Input data\n                    \n                newInput(props[, poll])\n                    @param [object]: Object of values\n                    @param [function] (optional): Function to poll Input data\n\n        @return [Input]\n    */\n    Input = function () {\n        var pollPos = arguments.length - 1;\n\n        this.current = {};\n        this.offset = {};\n        this.velocity = {};\n        this.history = new History();\n        this.update(arguments[0], arguments[1]);\n        \n        if (utils.isFunc(arguments[pollPos])) {\n            this.poll = arguments[pollPos];\n        }\n    };\n\nInput.prototype = {\n    \n    // [number]: Number of frames of inactivity before velocity is turned to 0\n    maxInactiveFrames: 2,\n    \n    // [number]: Number of frames input hasn't been updated\n    inactiveFrames: 0,\n    \n    /*\n        Get latest input values\n        \n        @param [string] (optional): Name of specific property to return\n        @return [object || number]: Latest input values or, if specified, single value\n    */\n    get: function (prop) {\n        var latest = this.history.get(),\n            val = (prop !== undefined) ? latest[prop] : latest;\n        \n        return val;\n    },\n\n    /*\n        Update the input values\n        \n        Syntax\n            input.update(name, value)\n                @param [string]: Name of to track\n                @param [number]: Initial value\n                \n            input.update(props)\n                @param [object]: Object of values\n                \n        @return [Input]\n    */\n    update: function (arg0, arg1) {\n        var values = {};\n\n        if (utils.isNum(arg1)) {\n            values[arg0] = arg1;\n        } else {\n            values = arg0;\n        }\n\n        this.history.add(utils.merge(this.current, values));\n        \n        return this;\n    },\n    \n    /*\n        Check for input movement and update pointer object's properties\n        \n        @param [number]: Timestamp of frame\n        @return [Input]\n    */\n    onFrame: function (timestamp) {\n        var latest, hasChanged;\n        \n        // Check provided timestamp against lastFrame timestamp and return input has already been updated\n        if (timestamp === this.lastFrame) {\n            return;\n        }\n        \n        latest = (this.poll) ? this.poll() : this.history.get();\n        hasChanged = utils.hasChanged(this.current, latest);\n\n        // If input has changed between frames  \n        if (hasChanged) {\n            this.velocity = calc.offset(this.current, latest);\n            this.current = latest;\n            this.inactiveFrames = 0;\n\n        // Or it hasn't moved and our frame limit has been reached\n        } else if (this.inactiveFrames >= this.maxInactiveFrames) {\n            this.velocity = calc.offset(this.current, this.current);\n        \n        // Or input hasn't changed\n        } else {\n            this.inactiveFrames++;\n        }\n        \n        this.lastFrame = timestamp;\n        \n        return this;\n    }\n    \n};\n\nmodule.exports = Input;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/input/input.js\n ** module id = 16\n ** module chunks = 0\n **/","/*\n    Process\n*/\n\"use strict\";\n\nvar manager = require('./manager.js'),\n\n    /*\n        Process constructor\n        \n        Syntax\n            var process = new Process(scope, callback);\n            var process = new Process(callback);\n    */\n    Process = function (arg0, arg1) {\n        var hasScope = (arg1 !== undefined),\n            callback = hasScope ? arg1 : arg0,\n            scope = hasScope ? arg0 : this;\n\n        this.setCallback(callback);\n        this.setScope(scope);\n\n        this.setId(manager.register(this));\n    };\n    \nProcess.prototype = {\n    \n    /*\n        [boolean]: Is this process currently active?\n    */\n    isActive: false,\n    \n    /*\n        [boolean]: Has this process been killed?\n    */\n    isKilled: false,\n\n    /*\n        Fire callback\n        \n        @param [timestamp]: Timestamp of currently-executed frame\n        @param [number]: Time since last frame\n    */\n    fire: function (timestamp, elapsed) {\n        // Check timers\n        if (this.isActive) {\n            this.callback.call(this.scope, timestamp, elapsed);\n        }\n        \n        if (this.isInterval) {\n            this.deactivate();\n        }\n        \n        return this;\n    },\n    \n    /*\n        Set process callback\n        \n        @param [function]: Function to fire per frame\n        @return [this]\n    */\n    setCallback: function (callback) {\n        this.callback = callback;\n        \n        return this;\n    },\n    \n    /*\n        Set callback scope\n        \n        @param [function]: Fire callback in this context\n        @return [this]\n    */\n    setScope: function (scope) {\n        this.scope = scope;\n        \n        return this;\n    },\n    \n    /*\n        Start process\n        \n        @param [int]: Duration of process in ms, 0 if indefinite\n        @return [this]\n    */\n    start: function (duration) {\n        var self = this;\n        \n        this.reset();\n        this.activate();\n        \n        if (duration) {\n            this.stopTimer = setTimeout(function () {\n                self.stop();\n            }, duration);\n            \n            this.isStopTimerActive = true;\n        }\n\n        return this;\n    },\n    \n    /*\n        Stop process\n        \n        @return [this]\n    */\n    stop: function () {\n        this.reset();\n        this.deactivate();\n        \n        return this;\n    },\n    \n    /*\n        Activate process\n        \n        @return [this]\n    */\n    activate: function () {\n        if (!this.isKilled) {\n            this.isActive = true;\n            manager.activate(this.id);\n        }\n\n        return this;\n    },\n    \n    /*\n        Deactivate process\n        \n        @return [this]\n    */\n    deactivate: function () {\n        this.isActive = false;\n        manager.deactivate(this.id);\n        \n        return this;\n    },\n    \n    /*\n        Fire process every x ms\n        \n        @param [int]: Number of ms to wait between refiring process.\n        @return [this]\n    */\n    every: function (interval) {\n\t    var self = this;\n\n        this.reset();\n\n        this.isInterval = true;\n\n        this.intervalTimer = setInterval(function () {\n            self.activate();\n        }, interval);\n        \n        this.isIntervalTimeActive = true;\n        \n        return this;\n    },\n    \n    /*\n        Clear all timers\n        \n        @param \n    */\n    reset: function () {\n        this.isInterval = false;\n        \n        if (this.isStopTimerActive) {\n            clearTimeout(this.stopTimer);\n        }\n        \n        if (this.isIntervalTimeActive) {\n            clearInterval(this.intervalTimer);\n        }\n        \n        return this;\n    },\n    \n    /*\n        Kill function in manager, release for garbage collection\n    */\n    kill: function () {\n        this.stop();\n        this.isKilled = true;\n        manager.kill(this.id);\n    },\n    \n    setId: function (id) {\n        this.id = id;\n        return this;\n    }\n};\n\nmodule.exports = Process;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/process/process.js\n ** module id = 17\n ** module chunks = 0\n **/","\"use strict\";\n\nvar utils = require('../utils/utils.js'),\n    \n    generateKeys = function (key) {\n        var keys = key.split(DOT),\n            keysLength = keys.length,\n            lastKey = keys[0],\n            i = 1;\n        \n        for (; i < keysLength; i++) {\n            keys[i] = lastKey += DOT + keys[i];\n        }\n        \n        return keys;\n    },\n\n    presetStore = {},\n    DOT = '.',\n    Presets = function () {};\n\nPresets.prototype = {\n\n    /*\n        Define a new Action preset\n        \n        Syntax\n        \n            .define(name, preset)\n                @param [string]: Name of preset\n                @param [object]: Preset options/properties\n                \n            .define(presets)\n                @param [object]: Multiple presets as named object\n                \n        @return [Redshift]\n    */\n    add: function (name, preset) {\n        var presets = {},\n            key = '';\n\n        if (utils.isObj(name)) {\n            presets = name;\n        } else {\n            presets[name] = preset;\n        }\n\n        for (key in presets) {\n            if (presets.hasOwnProperty(key)) {\n                presetStore[key] = presets[key];\n            }\n        }\n    },\n    \n    \n    /*\n        Get defined action\n        \n        @param [string]: The name of the predefined action\n    */\n    getDefined: function (key) {\n        var props = {},\n            thisProp = {},\n            keys = generateKeys(key),\n            keysLength = keys.length,\n            i = 0;\n\n        for (; i < keysLength; i++) {\n            thisProp = presetStore[keys[i]];\n\n            if (thisProp) {\n                props = utils.merge(props, thisProp);\n            }\n        }\n        \n        return props;\n    }\n    \n};\n\nmodule.exports = new Presets();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/action/presets.js\n ** module id = 18\n ** module chunks = 0\n **/","/*\n    Easing functions\n    ----------------------------------------\n    \n    Generates and provides easing functions based on baseFunction definitions\n    \n    A call to easingFunction.get('functionName') returns a function that can be passed:\n        @param [number]: Progress 0-1\n        @param [number] (optional): Amp modifier, only accepted in some easing functions\n                                    and is used to adjust overall strength\n        @return [number]: Eased progress\n        \n    We can generate new functions by sending an easing function through easingFunction.extend(name, method).\n    Which will make nameIn, nameOut and nameInOut functions available to use.\n        \n    Easing functions from Robert Penner\n    http://www.robertpenner.com/easing/\n        \n    Bezier curve interpretor created from Gaëtan Renaudeau's original BezierEasing  \n    https://github.com/gre/bezier-easing/blob/master/index.js  \n    https://github.com/gre/bezier-easing/blob/master/LICENSE\n*/\n\"use strict\";\n\nvar calc = require('./calc.js'),\n    Bezier = require('../types/bezier.js'),\n    \n    // Constants\n    INVALID_EASING = \": Not defined\",\n    EASE_IN = 'In',\n    EASE_OUT = 'Out',\n    EASE_IN_OUT = EASE_IN + EASE_OUT,\n    \n    // Base power ease names\n    powerEasing = ['ease', 'cubic', 'quart', 'quint'],\n    \n    // Generate easing function with provided power\n    generatePowerEasing = function (power) {\n        return function (progress) {\n            return Math.pow(progress, power);\n        }\n    },\n\n    /*\n        Each of these base functions is an easeIn\n        \n        On init, we use EasingFunction.mirror and .reverse to generate easeInOut and\n        easeOut functions respectively.\n    */\n    baseEasing = {\n        circ: function (progress) {\n            return 1 - Math.sin(Math.acos(progress));\n        },\n        back: function (progress) {\n            var strength = 1.5;\n\n            return (progress * progress) * ((strength + 1) * progress - strength);\n        }\n    },\n    \n    /*\n        Mirror easing\n        \n        Mirrors the provided easing function, used here for mirroring an\n        easeIn into an easeInOut\n        \n        @param [number]: Progress, from 0 - 1, of current shift\n        @param [function]: The easing function to mirror\n        @returns [number]: The easing-adjusted delta\n    */\n    mirrorEasing = function (progress, method) {\n        return (progress <= 0.5) ? method(2 * progress) / 2 : (2 - method(2 * (1 - progress))) / 2;\n    },\n            \n    /*\n        Reverse easing\n        \n        Reverses the output of the provided easing function, used for flipping easeIn\n        curve to an easeOut.\n        \n        @param [number]: Progress, from 0 - 1, of current shift\n        @param [function]: The easing function to reverse\n        @returns [number]: The easing-adjusted delta\n    */\n    reverseEasing = function (progress, method) {\n        return 1 - method(1 - progress);\n    },\n    \n    /*\n        Add new easing function\n        \n        Takes name and generates nameIn, nameOut, nameInOut, and easing functions to match\n        \n        @param [string]: Base name of the easing functions to generate\n        @param [function]: Base easing function, as an easeIn, from which to generate Out and InOut\n    */\n    generateVariations = function (name, method, isBaseIn) {\n        var easeIn = name + EASE_IN,\n            easeOut = name + EASE_OUT,\n            easeInOut = name + EASE_IN_OUT,\n            baseName = isBaseIn ? easeIn : easeOut,\n            reverseName = isBaseIn ? easeOut : easeIn;\n\n        // Create the In function\n        easing[baseName] = method;\n\n        // Create the Out function by reversing the transition curve\n        easing[reverseName] = function (progress) {\n            return reverseEasing(progress, easing[baseName]);\n        };\n        \n        // Create the InOut function by mirroring the transition curve\n        easing[easeInOut] = function (progress) {\n            return mirrorEasing(progress, easing[baseName]);\n        };\n    },\n    \n    easing = {\n    \n        /*\n            Get the named easing function\n            \n            @param [string]: Name of the easing function to get \n            @return [function || boolean]: Easing function or false if function undefined\n        */\n        get: function (name) {\n            var easing = this[name];\n            \n            if (!easing) {\n                throw name + INVALID_EASING;\n            }\n    \n            return easing;\n        },\n        \n        \n        /*\n            Add Bezier Curve easing\n            \n            @param [string]: Name of new easing\n            @parma [number]: X of coordinate 1\n            @parma [number]: Y of coordinate 1\n            @parma [number]: X of coordinate 2\n            @parma [number]: Y of coordinate 2\n        */\n        add: function (name, x1, y1, x2, y2) {\n            if (!this[name]) {\n                this[name] = new Bezier(x1, y1, x2, y2);\n            }\n        },\n        \n        \n        /*\n            Ease value within ranged parameters\n            \n            @param [number]: Progress between 0 and 1\n            @param [number]: Value of 0 progress\n            @param [number]: Value of 1 progress\n            @param [string]: Easing to use\n            @param [number]: Amplify progress out of specified range\n            @return [number]: Value of eased progress in range\n        */  \n        withinRange: function (progress, from, to, ease, escapeAmp) {\n            var progressLimited = calc.restricted(progress, 0, 1);\n    \n            if (progressLimited !== progress && escapeAmp) {\n                ease = 'linear';\n                progressLimited = progressLimited + ((progress - progressLimited) * escapeAmp);\n            }\n    \n            return calc.valueEased(progressLimited, from, to, this.get(ease));\n        },\n            \n        /*\n            Linear easing adjustment\n            \n            The default easing method, not added with .extend as it has no Out or InOut\n            variation.\n            \n            @param [number]: Progress, from 0-1\n            @return [number]: Unadjusted progress\n        */\n        linear: function (progress) {\n            return progress;\n        }\n    };\n\n\n// Initialise Easing  \n(function () {\n    var i = 0,\n        key = '';\n        \n    // Generate power easing functions\n    for (; i < 4; i++) {\n        baseEasing[powerEasing[i]] = generatePowerEasing(i + 2);\n    }\n    \n    // Generate in/out/inOut easing variations\n    for (key in baseEasing) {\n        if (baseEasing.hasOwnProperty(key)) {\n            generateVariations(key, baseEasing[key], true);\n        }\n    }\n})();\n\nmodule.exports = easing;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/easing.js\n ** module id = 19\n ** module chunks = 0\n **/","/*\n    Calculators\n    ----------------------------------------\n    \n    Simple I/O snippets\n*/\n\"use strict\";\n\nvar utils = require('./utils.js'),\n\n    calc = {\n        \n        /*\n            Angle between points\n            \n            Translates the hypothetical line so that the 'from' coordinates\n            are at 0,0, then return the angle using .angleFromCenter()\n            \n            @param [object]: X and Y coordinates of from point\n            @param [object]: X and Y cordinates of to point\n            @return [radian]: Angle between the two points in radians\n        */\n        angle: function (pointA, pointB) {\n            var from = pointB ? pointA : {x: 0, y: 0},\n                to = pointB || pointA,\n                point = {\n                    x: to.x - from.x,\n                    y: to.y - from.y\n                };\n            \n            return this.angleFromCenter(point.x, point.y);\n        },\n\n        /*\n            Angle from center\n            \n            Returns the current angle, in radians, of a defined point\n            from a center (assumed 0,0)\n            \n            @param [number]: X coordinate of second point\n            @param [number]: Y coordinate of second point\n            @return [radian]: Angle between 0, 0 and point in radians\n        */\n        angleFromCenter: function (x, y) {\n            return this.radiansToDegrees(Math.atan2(y, x));\n        },\n        \n        /*\n            Convert degrees to radians\n            \n            @param [number]: Value in degrees\n            @return [number]: Value in radians\n        */\n        degreesToRadians: function (degrees) {\n            return degrees * Math.PI / 180;\n        },\n\n        /*\n            Dilate\n            \n            Change the progression between a and b according to dilation.\n            \n            So dilation = 0.5 would change\n            \n            a --------- b\n            \n            to\n            \n            a ---- b\n            \n            @param [number]: Previous value\n            @param [number]: Current value\n            @param [number]: Dilate progress by x\n            @return [number]: Previous value plus the dilated difference\n        */\n        dilate: function (a, b, dilation) {\n            return a + ((b - a) * dilation);\n        },\n            \n        /*\n            Distance\n            \n            Returns the distance between (0,0) and pointA, unless pointB\n            is provided, then we return the difference between the two.\n            \n            @param [object/number]: x and y or just x of point A\n            @param [object/number]: (optional): x and y or just x of point B\n            @return [number]: The distance between the two points\n        */\n        distance: function (pointA, pointB) {\n            return (typeof pointA === \"number\") ? this.distance1D(pointA, pointB) : this.distance2D(pointA, pointB);\n        },\n    \n        /*\n            Distance 1D\n            \n            Returns the distance between point A and point B\n            \n            @param [number]: Point A\n            @param [number]: (optional): Point B\n            @return [number]: The distance between the two points\n        */\n        distance1D: function (pointA, pointB) {\n            var bIsNum = (typeof pointB === 'number'),\n                from = bIsNum ? pointA : 0,\n                to = bIsNum ? pointB : pointA;\n    \n            return absolute(to - from);\n        },\n    \n      \n        /*\n            Distance 2D\n            \n            Returns the distance between (0,0) and point A, unless point B\n            is provided, then we return the difference between the two.\n            \n            @param [object]: x and y of point A\n            @param [object]: (optional): x and y of point B\n            @return [number]: The distance between the two points\n        */\n        distance2D: function (pointA, pointB) {\n            var bIsObj = (typeof pointB === \"object\"),\n                from = bIsObj ? pointA : {x: 0, y: 0},\n                to = bIsObj ? pointB : pointA,\n                point = {\n                    x: absolute(to.x - from.x),\n                    y: absolute(to.y - from.y)\n                };\n                \n            return this.hypotenuse(point.x, point.y);\n        },\n            \n        /*\n            Hypotenuse\n            \n            Returns the hypotenuse, side C, given the lengths of sides A and B.\n            \n            @param [number]: Length of A\n            @param [number]: Length of B\n            @return [number]: Length of C\n        */\n        hypotenuse: function (a, b) {\n            var a2 = a * a,\n                b2 = b * b,\n                c2 = a2 + b2;\n                \n            return Math.sqrt(c2);\n        },\n        \n        /*\n            Offset between two inputs\n            \n            Calculate the difference between two different inputs\n            \n            @param [Point]: First input\n            @param [Point]: Second input\n            @return [Offset]: Distance metrics between two points\n        */\n        offset: function (a, b) {\n            var offset = {};\n    \n            for (var key in b) {\n                if (b.hasOwnProperty(key)) {\n                    if (a.hasOwnProperty(key)) {\n                        offset[key] = b[key] - a[key];\n                    } else {\n                        offset[key] = 0;\n                    }\n                } \n            }\n\n            if (isNum(offset.x) && isNum(offset.y)) {\n                offset.angle = this.angle(a, b);\n                offset.distance = this.distance2D(a, b);\n            }\n                \n            return offset;\n        },\n        \n        /*\n            Point from angle and distance\n            \n            @param [object]: 2D point of origin\n            @param [number]: Angle from origin\n            @param [number]: Distance from origin\n            @return [object]: Calculated 2D point\n        */\n        pointFromAngleAndDistance: function (origin, angle, distance) {\n            var point = {};\n    \n    \t\tpoint.x = distance * Math.cos(angle) + origin.x;\n            point.y = distance * Math.sin(angle) + origin.y;\n    \n            return point;\n        },\n    \n        /*\n            Progress within given range\n            \n            Given a lower limit and an upper limit, we return the progress\n            (expressed as a number 0-1) represented by the given value, and\n            limit that progress to within 0-1.\n            \n            @param [number]: Value to find progress within given range\n            @param [number]: Lower limit if full range given, upper if not\n            @param [number] (optional): Upper limit of range\n            @return [number]: Progress of value within range as expressed 0-1\n        */\n        progress: function (value, limitA, limitB) {\n            var bIsNum = (typeof limitB === 'number'),\n                from = bIsNum ? limitA : 0,\n                to = bIsNum ? limitB : limitA,\n                range = to - from,\n                progress = (value - from) / range;\n    \n            return progress;\n        },\n        \n        /*\n            Convert radians to degrees\n            \n            @param [number]: Value in radians\n            @return [number]: Value in degrees\n        */\n        radiansToDegrees: function (radians) {\n            return radians * 180 / Math.PI;\n        },\n    \n        \n        /*\n            Calculate relative value\n            \n            Takes the operator and value from a string, ie \"+=5\", and applies\n            to the current value to resolve a new target.\n            \n            @param [number]: Current value\n            @param [string]: Relative value\n            @return [number]: New value\n        */\n        relativeValue: function (current, rel) {\n            var newValue = current,\n                equation = rel.split('='),\n                operator = equation[0],\n                splitVal = utils.splitValUnit(equation[1]);\n\n            switch (operator) {\n                case '+':\n                    newValue += splitVal.value;\n                    break;\n                case '-':\n                    newValue -= splitVal.value;\n                    break;\n                case '*':\n                    newValue *= splitVal.value;\n                    break;\n                case '/':\n                    newValue /= splitVal.value;\n                    break;\n            }\n            \n            if (splitVal.unit) {\n                newValue += splitVal.unit;\n            }\n    \n            return newValue;\n        },\n    \n    \n        /*\n            Restrict value to range\n            \n            Return value within the range of lowerLimit and upperLimit\n            \n            @param [number]: Value to keep within range\n            @param [number]: Lower limit of range\n            @param [number]: Upper limit of range\n            @return [number]: Value as limited within given range\n        */\n        restricted: function (value, min, max) {\n            var restricted = (min !== undefined) ? Math.max(value, min) : value;\n            restricted = (max !== undefined) ? Math.min(restricted, max) : restricted;\n    \n            return restricted;\n        },\n    \n        /*\n            Convert x per second to per frame velocity based on fps\n            \n            @param [number]: Unit per second\n            @param [number]: Frame duration in ms\n        */\n        speedPerFrame: function (xps, frameDuration) {\n            return (isNum(xps)) ? xps / (1000 / frameDuration) : 0;\n        },\n    \n        /*\n            Convert velocity into velicity per second\n            \n            @param [number]: Unit per frame\n            @param [number]: Frame duration in ms\n        */\n        speedPerSecond: function (velocity, frameDuration) {\n            return velocity * (1000 / frameDuration);\n        },\n    \n     \n        /*\n            Value in range from progress\n            \n            Given a lower limit and an upper limit, we return the value within\n            that range as expressed by progress (a number from 0-1)\n            \n            @param [number]: The progress between lower and upper limits expressed 0-1\n            @param [number]: Lower limit of range, or upper if limit2 not provided\n            @param [number] (optional): Upper limit of range\n            @return [number]: Value as calculated from progress within range (not limited within range)\n        */\n        value: function (progress, limitA, limitB) {\n            var bIsNum = (typeof limitB === 'number'),\n                from = bIsNum ? limitA : 0,\n                to = bIsNum ? limitB : limitA;\n    \n            return (- progress * from) + (progress * to) + from; \n        },\n    \n    \n        /*\n            Eased value in range from progress\n            \n            Given a lower limit and an upper limit, we return the value within\n            that range as expressed by progress (a number from 0-1)\n            \n            @param [number]: The progress between lower and upper limits expressed 0-1\n            @param [number]: Lower limit of range, or upper if limit2 not provided\n            @param [number]: Upper limit of range\n            @param [function]: Easing to apply to value\n            @return [number]: Value as calculated from progress within range (not limited within range)\n        */\n        valueEased: function (progress, from, to, easing) {\n            var easedProgress = easing(progress);\n            \n            return this.value(easedProgress, from, to);\n        }\n    },\n\n    /*\n        Caching functions used multiple times to reduce filesize and increase performance\n    */\n    isNum = utils.isNum,\n    absolute = Math.abs;\n    \nmodule.exports = calc;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/calc.js\n ** module id = 20\n ** module chunks = 0\n **/","/*\n    Utility functions\n*/\n\"use strict\";\n\nvar protectedProperties = ['scope',  'dom'],\n    \n    isProtected = function (key) {\n        return (protectedProperties.indexOf(key) !== -1);\n    },\n\n    /*\n        Get var type as string\n        \n        @param: Variable to test\n        @return [string]: Returns, for instance 'Object' if [object Object]\n    */\n    varType = function (variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1);\n    };\n\nmodule.exports = {\n    \n    /*\n        Has one object changed from the other\n        \n        Compares the two provided inputs and returns true if they are different\n        \n        @param [object]: Input A\n        @param [object]: Input B\n        @return [boolean]: True if different\n    */\n    hasChanged: function (a, b) {\n        var hasChanged = false,\n            key = '';\n\n        for (key in b) {\n            if (a.hasOwnProperty(key) && b.hasOwnProperty(key)) {\n                if (a[key] !== b[key]) {\n                    hasChanged = true;\n                }\n            } else {\n                hasChanged = true;\n            }\n        }\n    \n        return hasChanged;\n    },\n    \n    /*\n        Is this var a number?\n        \n        @param: Variable to test\n        @return [boolean]: Returns true if typeof === 'number'\n    */\n    isNum: function (num) {\n        return (typeof num === 'number');\n    },\n    \n    /*\n        Is this var an object?\n        \n        @param: Variable to test\n        @return [boolean]: Returns true if typeof === 'object'\n    */\n    isObj: function (obj) {\n        return (typeof obj === 'object');\n    },\n    \n    /*\n        Is this var a function ? \n        \n        @param: Variable to test\n        @return [boolean]: Returns true if this.varType === 'Function'\n    */\n    isFunc: function (obj) {\n        return (varType(obj) === 'Function'); \n    },\n    \n    /*\n        Is this var a string ? \n        \n        @param: Variable to test\n        @return [boolean]: Returns true if typeof str === 'string'\n    */\n    isString: function (str) {\n        return (typeof str === 'string'); \n    },\n\n\n    /*\n        Is this a relative value assignment?\n        \n        @param [string]: Variable to test\n        @return [boolean]: If this looks like a relative value assignment\n    */\n    isRelativeValue: function (value) {\n        return (value && value.indexOf && value.indexOf('=') > 0);\n    },\n    \n    /*\n        Is this var an array ? \n        \n        @param: Variable to test\n        @return [boolean]: Returns true if this.varType === 'Array'\n    */\n    isArray: function (arr) {\n        return (varType(arr) === 'Array');\n    },\n    \n    /*\n        Copy object or array\n        \n        Checks whether base is an array or object and makes\n        appropriate copy\n        \n        @param [array || object]: Array or object to copy\n        @param [array || object]: New copy of array or object\n    */\n    copy: function (base) {\n        return (this.isArray(base)) ? this.copyArray(base) : this.copyObject(base);\n    },\n    \n    /*\n        Deep copy an object\n        \n        Iterates over an object and creates a new copy of every item,\n        deep copying if it finds any objects/arrays\n        \n        @param [object]: Object to copy\n        @param [object]: New copy of object\n    */\n    copyObject: function (base) {\n        var newObject = {};\n        \n        for (var key in base) {\n            if (base.hasOwnProperty(key)) {\n                newObject[key] = (this.isObj(base[key]) && !isProtected(key)) ? this.copy(base[key]) : base[key];\n            }\n        }\n        \n        return newObject;\n    },\n    \n    /*\n        Deep copy an array\n        \n        Loops through an array and creates a new copy of every item,\n        deep copying if it finds any objects/arrays\n        \n        @param [array]: Array to copy\n        @return [array]: New copy of array\n    */\n    copyArray: function (base) {\n        var newArray = [],\n            length = base.length,\n            i = 0;\n        \n        for (var i = 0; i < length; i++) {\n            newArray[i] = (this.isObj(base[i])) ? this.copy(base[i]) : base[i];\n        }\n        \n        return newArray;\n    },\n    \n    /*\n        Non-destructive merge of object or array\n        \n        @param [array || object]: Array or object to use as base\n        @param [array || object]: Array or object to overwrite base with\n        @return [array || object]: New array or object\n    */\n    merge: function (base, overwrite) {\n        return (this.isArray(base)) ? this.copyArray(overwrite) : this.mergeObject(base, overwrite);\n    },\n    \n    /*\n        Non-destructive merge of object\n        \n        @param [object]: Object to use as base\n        @param [object]: Object to overwrite base with\n        @return [object]: New object\n    */\n    mergeObject: function (base, overwrite) {\n        var hasBase = this.isObj(base),\n            newObject = hasBase ? this.copy(base) : this.copy(overwrite),\n            key = '';\n\n        if (hasBase) {\n            for (key in overwrite) {\n                if (overwrite.hasOwnProperty(key)) {\n                    newObject[key] = (this.isObj(overwrite[key]) && !isProtected(key)) ? this.merge(base[key], overwrite[key]) : overwrite[key];\n                }\n            }\n        }\n        return newObject;\n    },\n    \n    /*\n        Split a value into a value/unit object\n        \n            \"200px\" -> { value: 200, unit: \"px\" }\n            \n        @param [string]: Value to split\n        @return [object]: Object with value and unit props\n    */\n    splitValUnit: function (value) {\n        var splitVal = value.match(/(-?\\d*\\.?\\d*)(.*)/);\n\n        return {\n            value: parseFloat(splitVal[1]),\n            unit:  splitVal[2]\n        };\n    },\n\n    /*\n        Create stepped version of 0-1 progress\n        \n        @param [number]: Current value\n        @param [int]: Number of steps\n        @return [number]: Stepped value\n    */\n    stepProgress: function (progress, steps) {\n        var segment = 1 / (steps - 1),\n            target = 1 - (1 / steps),\n            progressOfTarget = Math.min(progress / target, 1);\n\n        return Math.floor(progressOfTarget / segment) * segment;\n    },\n    \n    /*\n        Generate current timestamp\n        \n        @return [timestamp]: Current UNIX timestamp\n    */\n    currentTime: function () {\n\t    return (typeof performance !== \"undefined\") ? performance.now() : new Date().getTime();\n    }\n    \n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/utils.js\n ** module id = 21\n ** module chunks = 0\n **/","\"use strict\";\n\nvar routes = require('../core/routes.js'),\n    routeKeys = [],\n    numRoutes,\n    \n    has = function (name) {\n        return (routeKeys.indexOf(name) > -1) ? true : false;\n    },\n    \n    manager = {\n        \n        /*\n            Add route\n            \n            @param [object]: Object of route functions\n                Valid methods\n                    .preprocess\n                    .onStart\n                    .onFrame\n                    .onChange\n                    .onEnd\n        */\n        add: function (name, route) {\n            routeKeys.push(name);\n            numRoutes = routeKeys.length;\n            \n            if (route.makeDefault) {\n                this.defaultRoute = name;\n            }\n            \n            route.name = name;\n            routes[name] = route;\n            \n            return this;\n        },\n        \n        /*\n            Run callback once for each route, provide route as argument\n            \n            @param [function]: Function to run for each route\n            @param [object] (optional): Root object to check if route name exists\n        */\n        shard: function (callback, props) {\n            var key = '',\n                i = 0;\n\n            for (; i < numRoutes; i++) {\n                key = routeKeys[i];\n\n                if ((props && props[key]) || !props) {\n                    callback(routes[key], props[key]);\n                }\n            }\n        },\n        \n        all: routes,\n        \n        getName: function (name) {\n            return (name !== undefined && has(name)) ? name : this.defaultRoute;\n        }\n    };\n\nmodule.exports = manager; \n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/action/routes.js\n ** module id = 22\n ** module chunks = 0\n **/","\"use strict\";\n\nvar actionPrototype = require('../action/action.js').prototype,\n\tactionGroupPrototype = require('../action-group/action-group.js').prototype,\n    generateMethodIterator = require('../action-group/generate-iterator.js'),\n    parseArgs = require('../action/parse-args.js'),\n    rubix = require('../core/rubix.js');\n\nmodule.exports = function (name, newRubix) {\n    var parser = parseArgs[name] || parseArgs.generic;\n\n    if (!newRubix.surpressMethod && !actionPrototype[name]) {\n        actionPrototype[name] = function () {\n            this.set(parser.apply(this, arguments));\n            return this.start(name);\n        };\n        \n        actionGroupPrototype[name] = generateMethodIterator(name);\n    }\n    \n    rubix[name] = newRubix;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/register-rubix.js\n ** module id = 23\n ** module chunks = 0\n **/","/*\n    Register new simulation\n*/\n\"use strict\";\n\nvar simulations = require('../core/simulations.js');\n\nmodule.exports = function (name, simulation) {\n    simulations[name] = simulation;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/register-simulation.js\n ** module id = 24\n ** module chunks = 0\n **/","\"use strict\";\n\nvar simulations = require('../core/simulations.js');\n\nmodule.exports = function (simulation, value, duration, started) {\n    var velocity = simulations[simulation](value, duration, started);\n    \n    return (Math.abs(velocity) >= value.stopSpeed) ? velocity : 0;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/action/simulate.js\n ** module id = 25\n ** module chunks = 0\n **/","\"use strict\";\n\nvar dictionary = require('./dictionary.js'),\n    templates = require('./templates.js'),\n    lookup = require('./lookup.js'),\n    \n    TRANSFORM = 'transform',\n    TRANSLATE_Z = 'translateZ',\n    \n    /*\n        Generate a CSS rule with the available template\n    */\n    generateRule = function (key, output, transformProp) {\n        var templateKey = transformProp ? TRANSFORM : lookup[key],\n            template = templates[templateKey];\n\n        return template ? template(key, output) : output[key];\n    };\n    \n\nmodule.exports = function (output, order, cache) {\n    var css = {},\n        numRules = order.length,\n        hasZ = false,\n        transformProp = dictionary.transformProps,\n        i = 0,\n        rule = '',\n        key = '',\n        transform = '';\n    \n    for (; i < numRules; i++) {\n        key = order[i],\n        rule = generateRule(key, output, transformProp[key]);\n\n        if (transformProp[key]) {\n            transform += rule + ' ';\n            hasZ = (key === TRANSLATE_Z) ? true : hasZ;\n\n        } else if (cache[key] !== rule) {\n            css[key] = rule;\n            cache[key] = rule;\n        }\n    }\n    \n    if (transform != '' && transform != cache[TRANSFORM]) {\n        if (!hasZ) {\n            transform += ' ' + TRANSLATE_Z + '(0px)';\n        }\n        \n        css[TRANSFORM] = cache[TRANSFORM] = transform;\n    }\n\n    return css;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/css/build.js\n ** module id = 26\n ** module chunks = 0\n **/","\"use strict\";\n\nvar defaultProperty = require('./default-property.js'),\n    dictionary = require('./dictionary.js'),\n    splitLookup = require('./lookup.js'),\n    splitters = require('./splitters.js'),\n    \n    utils = require('../../utils/utils.js'),\n    \n    valueProperties = dictionary.valueProps,\n    valuePropertyCount = valueProperties.length,\n    \n    resolve = function (value, scope) {\n\t    if (typeof value === 'function') {\n\t\t    value = value.call(scope);\n\t    }\n\t    \n\t    return value;\n    },\n    \n    /*\n        Build a property\n    */\n    buildProperty = function (value, parentKey, unitKey, parent, assignDefault) {\n        var property = defaultProperty[parentKey + unitKey]\n            || defaultProperty[unitKey]\n            || defaultProperty[parentKey]\n            || defaultProperty.base;\n        \n        assignDefault = assignDefault || valueProperties[0];\n         \n        if (parent) {\n            property = utils.merge(parent, property);\n        }\n        \n        if (utils.isObj(value)) {\n            property = utils.merge(property, value);\n\n        } else {\n            property[assignDefault] = value;\n        }\n\n        // If we have a unitKey, name property parentKey + unitKey\n        property.name = unitKey ? parentKey + unitKey : parentKey;\n        \n        return property;\n    },\n\n    /*\n        Split value with provided splitterID\n    */\n    split = function (key, value, splitter, action) {\n        var splitValue = {},\n            splitProperty = {},\n            newValue = {},\n            valueKey = '',\n            unitKey = '',\n            i = 0;\n            \n        if (utils.isObj(value)) {\n            for (; i < valuePropertyCount; i++) {\n                valueKey = valueProperties[i];\n                \n                if (value.hasOwnProperty(valueKey)) {\n                    splitProperty = splitter(resolve(value[valueKey], action));\n                    \n                    for (unitKey in splitProperty) {\n                        splitValue[unitKey] = splitValue[unitKey] || {};\n                        splitValue[unitKey][valueKey] = splitProperty[unitKey];\n                    }\n                }\n            }\n        } else {\n\t        splitValue = splitter(resolve(value, action));\n        }\n        \n        for (unitKey in splitValue) {\n            newValue[key + unitKey] = buildProperty(splitValue[unitKey], key, unitKey, value);\n        }\n        \n        return newValue;\n    };\n\n/*\n    Split CSS property into individual, tweenable values\n    \n    @param [string]: Name of CSS property\n    @param [string || number]: Value of CSS property\n*/\nmodule.exports = function (key, value, action) {\n    var splitterID = splitLookup[key],\n        splitter = splitters[splitterID],\n        values;\n        \n    values = (splitter) ? split(key, value, splitter, action) : {};\n\n    // If we don't have a splitter, assign the property directly\n    if (!splitter) {\n        values[key] = buildProperty(value, key);\n    }\n    \n    return values;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/css/split.js\n ** module id = 27\n ** module chunks = 0\n **/","\"use strict\";\n\nvar lookup = require('./lookup.js'),\n\n    /*\n        Convert percentage to pixels\n        \n        @param [number]: Percentage of total length\n        @param [number]: Total length\n    */\n    percentToPixels = function (percentage, length) {\n        return (parseFloat(percentage) / 100) * length + 'px';\n    };\n\n/*\n    Create styles\n    \n    @param [object]: SVG Path properties\n    @param [object]: Length of path\n    @returns [object]: Key/value pairs of valid CSS properties\n*/\nmodule.exports = function (props, pathLength) {\n    var hasArray = false,\n        svgProperty = '',\n        arrayStyles = {\n            length: 0,\n            spacing: pathLength + 'px'\n        },\n        pathStyles = {};\n\n    // Loop over each property and create related css property\n    for (var key in props) {\n        if (props.hasOwnProperty(key)) {\n            svgProperty = lookup[key];\n            \n            switch (key) {\n                case 'length':\n                case 'spacing':\n                    hasArray = true;\n                    arrayStyles[key] = percentToPixels(props[key], pathLength);\n                    break;\n                case 'offset':\n                    pathStyles[svgProperty] = percentToPixels(-props[key], pathLength);\n                    break;\n                default:\n                   pathStyles[svgProperty] = props[key]; \n            }\n        }\n    }\n    \n    if (hasArray) {\n        pathStyles[lookup.length] = arrayStyles.length + ' ' + arrayStyles.spacing;\n    }\n    \n    return pathStyles;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/path/builder.js\n ** module id = 28\n ** module chunks = 0\n **/","\"use strict\";\n\nvar utils = require('../utils/utils.js'),\n    presets = require('./presets.js'),\n    Pointer = require('../input/pointer.js'),\n\n    STRING = 'string',\n    NUMBER = 'number',\n    OBJECT = 'object',\n    \n    /*\n        Generic argument parsing\n        \n        Checks first argument to be a string and loads preset,\n        merges in next object as override\n    */\n    generic = function () {\n        var props = {},\n            playlist = [],\n            base = arguments[0],\n            override = arguments[1],\n            playlistLength = 0,\n            argsAsArray = [].slice.call(arguments),\n            i = 1;\n\n        if (typeof base == STRING) {\n            playlist = base.split(' ');\n            playlistLength = playlist.length;\n            props = presets.getDefined(playlist[0]);\n\n            // If we've had multiple presets, loop through and add each to the queue\n            if (playlistLength > 1) {\n                for (; i < playlistLength; i++) {\n                    argsAsArray.shift();\n                    argsAsArray.unshift(playlist[i]);\n                    this.queue.add.apply(this.queue, argsAsArray);\n                }\n            }\n            \n            if (typeof override == OBJECT) {\n                props = utils.merge(props, override);\n            }\n        // If object, assign directly\n        } else if (typeof base == OBJECT) {\n            props = base;\n        }\n        \n        props.playDirection = 1;\n        \n        return props;\n    };\n\nmodule.exports = {\n    \n    /*\n        Parse play arguments\n        \n        Syntax\n            .play(preset [,override, duration, easing, onEnd])\n            .play(properties [, duration, easing, onEnd])\n    */\n    play: function () {\n        var props = generic.apply(this, arguments),\n            argsLength = arguments.length,\n            i = 0,\n            arg,\n            typeofArg = '';\n        \n        // Play specific properties\n        props.loopCount = props.yoyoCount = props.flipCount = 0;\n        \n        for (; i < argsLength; i++) {\n            arg = arguments[i];\n            typeofArg = typeof arg;\n            \n            // Easing if string and not first index\n            if (typeofArg == STRING && i !== 0) {\n                props.ease = arg;\n            \n            // Duration if number\n            } else if (typeofArg == NUMBER) {\n                props.duration = arg;\n                \n            // Callback if function\n            } else if (utils.isFunc(arg)) {\n                props.onEnd = arg;\n            }\n        }\n\n        return props;\n    },\n    \n    /*\n        Parse track arguments\n        \n        Syntax\n            .track(preset [, override], event/Input)\n            .track(properties, event/Input)\n    */\n    track: function () {\n        var props = {},\n            argsLength = arguments.length,\n            inputIndex = argsLength - 1,\n            input = arguments[inputIndex];\n        \n        // Loop until inputIndex\n        for (var i = 0; i < inputIndex; i++) {\n            \n            // Preset if string\n            if (typeof arguments[i] === STRING) {\n                props = presets.getDefined(arguments[i]);\n                \n            // Or override\n            } else {\n                props = utils.merge(props, arguments[i]);\n            }\n        }\n        \n        // Create Pointer if this isn't an Input\n        input = (!input.current) ? new Pointer(input) : input;\n        \n        // Append input\n        props.input = input;\n\n        if (!props.inputOrigin) {\n            props.inputOrigin = input.get();\n        }\n        \n        return props;\n    },\n    \n    generic: generic\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/action/parse-args.js\n ** module id = 29\n ** module chunks = 0\n **/","\"use strict\";\n\nvar defaultProps = require('../defaults/value-props.js'),\n    defaultState = require('../defaults/value-state.js'),\n    resolve = require('../utils/resolve.js'),\n    utils = require('../utils/utils.js'),\n\n    CURRENT = 'current',\n    ORIGIN = 'origin',\n    FORCE_NUMBER = [CURRENT, ORIGIN, 'to', 'start'],\n    \n    /*\n        Parse setter arguments\n    */\n    parseSetArgs = function (arg0, arg1) {\n        var newProps = {};\n\n        // If we've just got a value, set default\n        if (arguments.length === 1) {\n            newProps[CURRENT] = arg0;\n            \n        // Or we've got key/value args\n        } else {\n            newProps[arg0] = arg1;\n        }\n        \n        return newProps;\n    },\n\n    /*\n        Value constructor\n    */\n    Value = function (key, props, inherit, action) {\n        this.key = key;\n        this.action = action;\n        this.scope = action.scope;\n\n        if (props.start) {\n            props.current = props.start;\n        }\n\n        this._set(defaultProps);\n        this._set(defaultState);\n        this.set(props, inherit);\n    };\n    \nValue.prototype = {\n\n    /*\n        Set value properties\n        \n        Syntax\n            .set('key', value) // Set specific value\n            .set({ key: value }) // Set multiple values\n            .set({ key: value }, { key: value2 }) // Set multiple with inherit\n            .set(value) // Set .current\n    */\n    set: function () {\n        this._set.apply(this, arguments);\n        \n        // Update Action value process order\n        this.action.updateOrder(this.key, utils.isString(this.link));\n        \n        return this;\n    },\n    \n    /*\n        Internal setter, doesn't update order\n    */\n    _set: function () {\n        var multiVal = utils.isObj(arguments[0]),\n            newProps = multiVal ? arguments[0] : parseSetArgs.apply(self, arguments),\n            inherit = multiVal ? arguments[1] : false,\n            toSet = {},\n            key = '';\n        \n        // Deal with inherited values first\n        if (inherit) {\n            for (key in inherit) {\n                // Check this is a Value, not Action property\n                if (defaultProps.hasOwnProperty(key)) {\n                    toSet[key] = inherit[key];\n                }\n            }\n        }\n        \n        // Loop through all properties and set\n        for (key in newProps) {\n            toSet[key] = newProps[key];\n        }\n        \n        // Loop through collected values and set\n        for (key in toSet) {\n            this[key] = resolve(toSet[key], this.current, this, this.scope);\n                \n            if (FORCE_NUMBER.indexOf(key) > -1) {\n                this[key] = parseFloat(this[key]);\n            }\n            \n            if (key === 'to') {\n                this.target = this.to;\n            }\n        }\n        \n        // Set hasRange to true if min and max are numbers\n        this.hasRange = (utils.isNum(this.min) && utils.isNum(this.max)) ? true : false;\n        \n        return this;\n    },\n    \n    /*\n        Set current value to origin\n    */\n    reset: function () {\n        this._set('to', this.target);\n        return this._set(CURRENT, this[ORIGIN]);\n    },\n    \n    /*\n        Reset properties to defaults\n    */\n    resetProps: function () {\n        this.set(defaultProps);\n    },\n    \n    /*\n        Swap current target and origin\n    */\n    flip: function () {\n        var newTo = this[ORIGIN],\n            newOrigin = (this.target !== undefined) ? this.target : this[CURRENT];\n\n        return this.set({\n            to: newTo,\n            origin: newOrigin\n        });\n    },\n    \n    retarget: function (target) {\n        target = (target !== undefined) ? target : this.target;\n        return this.set('to', target);\n    }\n};\n\nmodule.exports = Value;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/types/value.js\n ** module id = 30\n ** module chunks = 0\n **/","\"use strict\";\n\nvar Queue = function () {\n        this.clear();\n    };\n\nQueue.prototype = {\n    \n    /*\n        Add a set of arguments to queue\n    */\n    add: function () {\n        this.queue.push([].slice.call(arguments));\n    },\n    \n    /*\n        Get next set of arguments from queue\n    */\n    next: function (direction) {\n        var queue = this.queue,\n            returnVal = false,\n            index = this.index;\n            \n        direction = (arguments.length) ? direction : 1;\n        \n        // If our index is between 0 and the queue length, return that item\n        if (index >= 0 && index < queue.length) {\n            returnVal = queue[index];\n            this.index = index + direction;\n        \n        // Or clear\n        } else {\n            this.clear();\n        }\n        \n        return returnVal;\n    },\n\n    /*\n        Replace queue with empty array\n    */\n    clear: function () {\n        this.queue = [];\n        this.index = 0;\n    }\n};\n\nmodule.exports = Queue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/action/queue.js\n ** module id = 31\n ** module chunks = 0\n **/","/*\n    Process actions\n*/\n\"use strict\";\n\nvar Rubix = require('../core/rubix.js'),\n    routes = require('./routes.js'),\n    calc = require('../utils/calc.js');\n\nmodule.exports = function (action, framestamp, frameDuration) {\n    var values = action.values,\n        rubix = Rubix[action.rubix],\n        valueRubix = rubix,\n        defaultRoute = routes.getName(),\n        i = 0,\n        order = action.order = action.order || [],\n        orderLength = order.length,\n        key = '', value, valueOutput;\n    \n    // Update elapsed\n    if (rubix.updateInput) {\n        rubix.updateInput(action, frameDuration);\n    }\n\n    // Fire onStart if first frame\n    if (action.firstFrame) {\n        routes.shard(function (route, output) {\n            if (route.onStart) {\n                route.onStart(output, action, values);\n            }\n        }, action);\n    }\n    \n    // Update Input if available\n    if (action.input) {\n        action.output.input = action.input.onFrame(framestamp);\n    }\n\n    // Update values\n    for (; i < orderLength; i++) {\n        // Get value and key\n        key = order[i];\n        value = values[key];\n\n        // Load rubix for this value\n        valueRubix = rubix;\n        if (value.link) {\n            valueRubix = Rubix['link'];\n        }\n\n        // Calculate new value\n        valueOutput = valueRubix.process(key, value, values, action, frameDuration);\n        \n        // Limit if range set\n        if (valueRubix.limit) {\n            valueOutput = valueRubix.limit(valueOutput, value);\n        }\n        \n        // Round value if rounding set to true\n        if (value.round) {\n            valueOutput = Math.round(valueOutput);\n        }\n\n        // Update change from previous frame\n        value.frameChange = valueOutput - value.current;\n        \n        // Calculate velocity\n        if (!valueRubix.calculatesVelocity) {\n            value.velocity = calc.speedPerSecond(value.frameChange, frameDuration);\n        }\n        \n        // Update current speed\n        value.speed = Math.abs(value.velocity);\n        \n        // Check if changed and update\n        if (value.current != valueOutput) {\n            action.hasChanged = true;\n        }\n\n        // Set current and add unit (if any) for output\n        value.current = valueOutput;\n        action.output[value.route] = action.output[value.route] || {};\n        action.output[defaultRoute] = action.output[defaultRoute] || {};\n        action.output[defaultRoute][key] = action.output[value.route][value.name] = (value.unit) ? valueOutput + value.unit : valueOutput;\n    }\n\n    // shard onFrame and onChange\n    routes.shard(function (route, output) {\n        // Fire onFrame every frame\n        if (route.onFrame) {\n            route.onFrame(output, action, values);\n        }\n        \n        // Fire onChanged if values have changed\n        if (action.hasChanged && route.onChange || action.firstFrame) {\n            route.onChange(output, action, values);\n        }\n    }, action.output);\n\n    // Fire onEnd if ended\n    if (rubix.hasEnded(action, action.hasChanged)) {\n        action.isActive(false);\n        \n        routes.shard(function (route, output) {\n            if (route.onEnd) {\n                route.onEnd(output, action, values);\n            }\n        }, action.output);\n        \n        if (!action.isActive() && action.rubix === 'play') {\n            action.next();\n        }\n    } else {\n\t    action.hasChanged = false;\n    }\n\n    action.firstFrame = false;\n    action.framestamp = framestamp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/action/processor.js\n ** module id = 32\n ** module chunks = 0\n **/","module.exports = {\n    // [string]: What to use to process this aciton\n    rubix: 'play',\n    \n    // [number]: Multiply output value by\n    amp: 1,\n    \n    // [number]: Multiply output value outside min/max by\n    escapeAmp: 0,\n    \n    // [number]: Delay this action by x ms\n    delay: 0,\n    \n    // [number]: Time of animation (if animating) in ms\n    duration: 400,\n    \n    // [string]: Ease animation\n    ease: 'easeInOut',\n    \n    // [number]: Multiply progress by this (.5 is half speed)\n    dilate: 1,\n    \n    // [int]: Number of frames Action has been inactive\n    inactiveFrames: 0,\n    \n    // [number]: Number of frames of no change before Action is declared inactive\n    maxInactiveFrames: 3,\n    \n    // [boolean || number]: Number of times to loop values, true for indefinite\n    loop: false,\n    \n    // [boolean || number]: Number of times to yoyo values, true for indefinite\n    yoyo: false,\n    \n    // [boolean || number]: Number of times to flip values, true for indefinite\n    flip: false,\n    \n    // [function]: Callback when Action process starts\n    onStart: undefined,\n    \n    // [function]: Callback when any value changes\n    onChange: undefined,\n    \n    // [function]: Callback every frame\n    onFrame: undefined,\n    \n    // [function]: Callback when Action process ends\n    onEnd: undefined\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/defaults/action-props.js\n ** module id = 33\n ** module chunks = 0\n **/","module.exports = {\n    // [boolean]: True if Action is current active\n    active: false,\n    \n    // [number]: Progress represented in a range of 0 - 1\n    progress: 0,\n    \n    // [int]: Time elapsed in milliseconds\n    elapsed: 0,\n    \n    // [int]: 1 = forward, -1 = backwards\n    playDirection: 1,\n    \n    // [int]: Number of times values have been flipped\n    flipCount: 0,\n    \n    // [int]: Number of times values have been looped\n    loopCount: 0,\n    \n    // [int]: Number of times values have been yoyoed\n    yoyoCount: 0\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/defaults/action-state.js\n ** module id = 34\n ** module chunks = 0\n **/","\"use strict\";\n\nvar cssStyler = function () {\n\tvar testElement,\n\t\tprefixes = ['Webkit','Moz','O','ms', ''],\n\t\tprefixesLength = prefixes.length,\n\t\tcache = {},\n\t\t\n\t\t/*\n\t\t\tTest style property for prefixed version\n\t\t\t\n\t\t\t@param [string]: Style property\n\t\t\t@return [string]: Cached property name\n\t\t*/\n\t\ttestPrefix = function (key) {\n\t\t\tcache[key] = key;\n\n\t\t\tfor (var i = 0; i < prefixesLength; i++) {\n\t\t\t\tvar prefixed = prefixes[i] + key.charAt(0).toUpperCase() + key.slice(1);\n\n\t\t\t\tif (testElement.style.hasOwnProperty(prefixed)) {\n\t\t\t\t\tcache[key] = prefixed;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn cache[key];\n\t\t};\n\t\n\t/*\n\t\tStyle DOM function\n\t\t\n\t\tSyntax\n\t\t\t\n\t\t\tGet property\n\t\t\t\tstyle(element, 'property');\n\t\t\t\t\n\t\t\tSet property\n\t\t\t\tstyle(element, {\n\t\t\t\t\tfoo: 'bar'\n\t\t\t\t});\n\t*/\n\treturn function (element, prop) {\n\t    // Cache body tag if we haven't already\n\t\ttestElement = testElement || document.getElementsByTagName('body')[0];\n\n\t\t// If prop is a string, we're requesting a property\n\t\tif (typeof prop === 'string') {\n\t\t\treturn window.getComputedStyle(element, null)[cache[prop] || testPrefix(prop)];\n\t\t\n\t\t// If it's an object, we're setting\n\t\t} else {\n\t\t    for (var key in prop) {\n\t\t\t\tif (prop.hasOwnProperty(key)) {\n\t\t\t\t\telement.style[cache[key] || testPrefix(key)] = prop[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t}\n\t}\n};\n\nmodule.exports = new cssStyler();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/css/styler.js\n ** module id = 35\n ** module chunks = 0\n **/","\"use strict\";\n/*\n\tGenerate method iterator\n\t\n\tTakes a method name and returns a function that will\n\tloop over all the Actions in a group and fire that\n\tmethod with those properties\n\t\n\t@param [string]: Name of method\n*/\nmodule.exports = function (method) {\n\treturn function () {\n        var numActions = this.actions.length,\n            i = 0,\n\t\t\tisGetter = false,\n\t\t\tgetterArray = [],\n\t\t\taction,\n\t\t\tactionReturn;\n\t\t\t\n\t\tfor (; i < numActions; i++) {\n\t\t\taction = this.actions[i];\n\t\t\tactionReturn = action[method].apply(action, arguments);\n\t\t\t\n\t\t\tif (actionReturn != action) {\n    \t\t\tisGetter = true;\n    \t\t\tgetterArray.push(actionReturn);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (isGetter) ? getterArray : this;\n\t};\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/action-group/generate-iterator.js\n ** module id = 36\n ** module chunks = 0\n **/","\"use strict\";\n\nvar // [number]: Default max size of history\n    maxHistorySize = 3,\n    \n    /*\n        History constructor\n        \n        @param [var]: Variable to store in first history slot\n        @param [int] (optional): Maximum size of history\n    */\n    History = function (obj, max) {\n        this.max = max || maxHistorySize;\n        this.entries = [];\n        this.add(obj);\n    };\n    \nHistory.prototype = {\n    \n    /*\n        Push new var to history\n        \n        Shift out oldest entry if we've reached maximum capacity\n        \n        @param [var]: Variable to push into history.entries\n    */\n    add: function (obj) {\n        var currentSize = this.getSize();\n        \n        this.entries.push(obj);\n        \n        if (currentSize >= this.max) {\n            this.entries.shift();\n        }\n    },\n    \n    /*\n        Get variable at specified index\n\n        @param [int]: Index\n        @return [var]: Var found at specified index\n    */\n    get: function (i) {\n        i = (typeof i === 'number') ? i : this.getSize() - 1;\n\n        return this.entries[i];\n    },\n    \n    /*\n        Get the second newest history entry\n        \n        @return [var]: Entry found at index size - 2\n    */\n    getPrevious: function () {\n        return this.get(this.getSize() - 2);\n    },\n    \n    /*\n        Get current history size\n        \n        @return [int]: Current length of entries.length\n    */\n    getSize: function () {\n        return this.entries.length;\n    }\n    \n};\n\nmodule.exports = History;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/history.js\n ** module id = 37\n ** module chunks = 0\n **/","\"use strict\";\n\nvar theLoop = require('./loop.js'),\n    ProcessManager = function () {\n        this.all = {};\n        this.active = [];\n        this.deactivateQueue = [];\n        theLoop.setCallback(this, this.fireActive);\n    };\n    \nProcessManager.prototype = {\n    \n    /*\n        [int]: Used for process ID\n    */\n    processCounter: 0,\n    \n    /*\n        [int]: Number of active processes\n    */\n    activeCount: 0,\n    \n    /*\n        Get the process with a given index\n        \n        @param [int]: Index of process\n        @return [Process]\n    */\n    getProcess: function (i) {\n        return this.all[i];\n    },\n    \n    /*\n        Get number of active processes\n        \n        @return [int]: Number of active processes\n    */\n    getActiveCount: function () {\n        return this.activeCount;\n    },\n    \n    /*\n        Get active tokens\n\n        @return [array]: Active tokens\n    */\n    getActive: function () {\n        return this.active;\n    },\n    \n    /*\n        Get the length of the deactivate queue\n        \n        @return [int]: Length of queue\n    */\n    getQueueLength: function () {\n        return this.deactivateQueue.length;\n    },\n    \n    /*\n        Fire all active processes\n        \n        @param [int]: Timestamp of executing frames\n        @param [int]: Time since previous frame\n        @return [boolean]: True if active processes found\n    */\n    fireActive: function (framestamp, elapsed) {\n        var process,\n            activeCount = 0,\n            activeProcesses = [];\n\n        // Purge and check active count before execution\n        this.purge();\n        activeCount = this.getActiveCount();\n        activeProcesses = this.getActive();\n        \n        // Loop through active processes and fire callback\n        for (var i = 0; i < activeCount; i++) {\n            process = this.getProcess(activeProcesses[i]);\n            \n            if (process) {\n                process.fire(framestamp, elapsed);\n            }\n        }\n\n        // Repurge and recheck active count after execution\n        this.purge();\n        activeCount = this.getActiveCount();\n        \n        return activeCount ? true : false;\n    },\n    \n    /*\n        Register a new process\n        \n        @param [Process]\n        @return [int]: Index of process to be used as ID\n    */\n    register: function (process) {\n        var id = this.processCounter;\n\n        this.all[id] = process;\n        \n        this.processCounter++;\n        \n        return id;\n    },\n    \n    /*\n        Activate a process\n        \n        @param [int]: Index of active process\n    */\n    activate: function (i) {\n        var queueIndex = this.deactivateQueue.indexOf(i),\n            isQueued = (queueIndex > -1),\n            isActive = (this.active.indexOf(i) > -1);\n        \n        // Remove from deactivateQueue if in there\n        if (isQueued) {\n            this.deactivateQueue.splice(queueIndex, 1);\n        }\n        \n        // Add to active processes array if not already in there\n        if (!isActive) {\n            this.active.push(i);\n            this.activeCount++;\n            theLoop.start(this);\n        }\n    },\n    \n    /*\n        Deactivate a process\n        \n        @param [int]: Index of process to add to deactivate queue\n    */\n    deactivate: function (i) {\n        this.deactivateQueue.push(i);\n    },\n    \n    /*\n        Purge the deactivate queue\n    */\n    purge: function () {\n        var activeIndex,\n            queueLength = this.getQueueLength();\n        \n        while (queueLength--) {\n            activeIndex = this.active.indexOf(this.deactivateQueue[queueLength]);\n            \n            // If process in active list deactivate\n            if (activeIndex > -1) {\n                this.active.splice(activeIndex, 1);\n                this.activeCount--;\n            }\n        }\n        \n        this.deactivateQueue = [];\n    },\n    \n    /*\n        Remove the provided id and reindex remaining processes\n    */\n    kill: function (id) {\n        delete this.all[id];\n    }\n    \n};\n\nmodule.exports = new ProcessManager();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/process/manager.js\n ** module id = 38\n ** module chunks = 0\n **/","/*\n    Bezier function generator\n        \n    Gaëtan Renaudeau's BezierEasing\n    https://github.com/gre/bezier-easing/blob/master/index.js  \n    https://github.com/gre/bezier-easing/blob/master/LICENSE\n    You're a hero\n    \n    Use\n    \n        var easeOut = new Bezier(.17,.67,.83,.67),\n            x = easeOut(0.5); // returns 0.627...\n*/\n\"use strict\";\n\nvar NEWTON_ITERATIONS = 8,\n    NEWTON_MIN_SLOPE = 0.001,\n    SUBDIVISION_PRECISION = 0.0000001,\n    SUBDIVISION_MAX_ITERATIONS = 10,\n    K_SPLINE_TABLE_SIZE = 11,\n    K_SAMPLE_STEP_SIZE = 1.0 / (K_SPLINE_TABLE_SIZE - 1.0),\n    FLOAT_32_SUPPORTED = 'Float32Array' in global,\n    \n    A = function (a1, a2) {\n        return 1.0 - 3.0 * a2 + 3.0 * a1;\n    },\n    \n    B = function (a1, a2) {\n        return 3.0 * a2 - 6.0 * a1;\n    },\n    \n    C = function (a1) {\n        return 3.0 * a1;\n    },\n\n    getSlope = function (t, a1, a2) {\n        return 3.0 * A(a1, a2) * t * t + 2.0 * B(a1, a2) * t + C(a1);\n    },\n\n    calcBezier = function (t, a1, a2) {\n        return ((A(a1, a2) * t + B(a1, a2)) * t + C(a1)) * t;\n    },\n    \n    /*\n        Bezier constructor\n    */\n    Bezier = function (mX1, mY1, mX2, mY2) {\n        var sampleValues = FLOAT_32_SUPPORTED ? new Float32Array(K_SPLINE_TABLE_SIZE) : new Array(K_SPLINE_TABLE_SIZE),\n            _precomputed = false,\n    \n            binarySubdivide = function (aX, aA, aB) {\n                var currentX, currentT, i = 0;\n\n                do {\n                    currentT = aA + (aB - aA) / 2.0;\n                    currentX = calcBezier(currentT, mX1, mX2) - aX;\n                    if (currentX > 0.0) {\n                        aB = currentT;\n                    } else {\n                        aA = currentT;\n                    }\n                } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n                return currentT;\n            },\n        \n            newtonRaphsonIterate = function (aX, aGuessT) {\n                var i = 0,\n                    currentSlope = 0.0,\n                    currentX;\n                \n                for (; i < NEWTON_ITERATIONS; ++i) {\n                    currentSlope = getSlope(aGuessT, mX1, mX2);\n                    \n                    if (currentSlope === 0.0) {\n                        return aGuessT;\n                    }\n                    \n                    currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n                    aGuessT -= currentX / currentSlope;\n                }\n                \n                return aGuessT;\n            },\n            \n            \n            calcSampleValues = function () {\n                for (var i = 0; i < K_SPLINE_TABLE_SIZE; ++i) {\n                    sampleValues[i] = calcBezier(i * K_SAMPLE_STEP_SIZE, mX1, mX2);\n                }\n            },\n            \n            \n            getTForX = function (aX) {\n                var intervalStart = 0.0,\n                    currentSample = 1,\n                    lastSample = K_SPLINE_TABLE_SIZE - 1,\n                    dist = 0.0,\n                    guessForT = 0.0,\n                    initialSlope = 0.0;\n                    \n                for (; currentSample != lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n                    intervalStart += K_SAMPLE_STEP_SIZE;\n                }\n                \n                --currentSample;\n                \n                dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample+1] - sampleValues[currentSample]);\n                guessForT = intervalStart + dist * K_SAMPLE_STEP_SIZE;\n                \n                initialSlope = getSlope(guessForT, mX1, mX2);\n                \n                // If slope is greater than min\n                if (initialSlope >= NEWTON_MIN_SLOPE) {\n                    return newtonRaphsonIterate(aX, guessForT);\n                // Slope is equal to min\n                } else if (initialSlope === 0.0) {\n                    return guessForT;\n                // Slope is less than min\n                } else {\n                    return binarySubdivide(aX, intervalStart, intervalStart + K_SAMPLE_STEP_SIZE);\n                }\n            },\n            \n            precompute = function () {\n                _precomputed = true;\n                if (mX1 != mY1 || mX2 != mY2) {\n                    calcSampleValues();\n                }\n            },\n            \n            /*\n                Generated function\n                \n                Returns value 0-1 based on X\n            */\n            f = function (aX) {\n                var returnValue;\n\n                if (!_precomputed) {\n                    precompute();\n                }\n                \n                // If linear gradient, return X as T\n                if (mX1 === mY1 && mX2 === mY2) {\n                    returnValue = aX;\n                    \n                // If at start, return 0\n                } else if (aX === 0) {\n                    returnValue = 0;\n                    \n                // If at end, return 1\n                } else if (aX === 1) {\n                    returnValue = 1;\n\n                } else {\n                    returnValue = calcBezier(getTForX(aX), mY1, mY2);\n                }\n                \n                return returnValue;\n            }\n            \n            return f;\n    };\n\nmodule.exports = Bezier;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/types/bezier.js\n ** module id = 39\n ** module chunks = 0\n **/","module.exports = {};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/routes.js\n ** module id = 40\n ** module chunks = 0\n **/","/*\n    Anatomy of a Rubix:\n    \n        Props\n            surpressMethod [boolean]:\n                If not true, will create Action shorthand method \n                with the name of the rubix, ie .play()\n\n            calculatesVelocity [boolean]:\n                Set to true if your Rubix will calculate\n                the new Value velocity (otherwise Redshift may override it)\n                \n        Methods\n            updateInput\n                Run once per frame, before Values are processed. .play uses this\n                to update the timer, .track uses it to check the input device.\n\n                @param [Action]: The Action being processed\n                @param [object]: Action properties\n                @param [int]: Duration since the last frame in milliseconds\n            \n            process (required)\n                Run once for every Action value, this method returns the latest value\n\n                @param [string]: Name of value being processed\n                @param [Value]: Value being processed\n                @param [object]: Action values\n                @param [object]: Action properties\n                @param [Action]: Action\n                @param [int]: Duration since the last frame in milliseconds\n                @return [int]: Latest value\n                \n            limit\n                Run once for every Action value, this can be used to limit the value\n                within any parameters\n                \n                @param [int]: Value returned from process method\n                @param [Value]: Value being processed\n                @return [int]: Latest value\n                \n            hasEnded (required)\n                Returns true if this current Action has ended. Redshift will\n                then check the Action's queue or yoyo/loop properties to decide\n                what action to take next\n                \n                @param [Action]: Action being processed\n                @param [boolean]: True if any value has changed\n*/            \nmodule.exports = {};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/rubix.js\n ** module id = 41\n ** module chunks = 0\n **/","/*\n    Anatomy of a simulation\n    \n    @param [Value]: Value we're simulating\n    @param [number]: Time since last frame in milliseconds\n    @param [number]: Action start time in milliseconds\n    @return [number]: New velocity\n*/\n\"use strict\";\n\nvar calc = require('../utils/calc.js'),\n    utils = require('../utils/utils.js'),\n    speedPerFrame = calc.speedPerFrame;\n\nmodule.exports = {\n    \n    /*\n        Velocity\n        \n        The default .run() simulation.\n        \n        Applies any set deceleration and acceleration to existing velocity\n    */\n    velocity: function (value, duration) {\n        return value.velocity - speedPerFrame(value.deceleration, duration) + speedPerFrame(value.acceleration, duration);\n    },\n    \n    /*\n        Glide\n        \n        Emulates touch device scrolling effects with exponential decay\n        http://ariya.ofilabs.com/2013/11/javascript-kinetic-scrolling-part-2.html\n    */\n    glide: function (value, duration, started) {\n        var timeUntilFinished = - utils.currentTime() - started,\n            delta = - value.to * Math.exp(timeUntilFinished / value.timeConstant);\n        \n        return (value.to + delta) - value.current;\n    },\n    \n    /*\n        Friction\n    */\n    friction: function (value, duration) {\n        var newVelocity = speedPerFrame(value.velocity, duration) * (1 - value.friction);\n        return calc.speedPerSecond(newVelocity, duration);\n    },\n    \n    /*\n        Spring\n    */\n    spring: function (value, duration) {\n        var distance = value.to - value.current;\n        \n        value.velocity += distance * speedPerFrame(value.spring, duration);\n        \n        return this.friction(value, duration);\n    },\n    \n    /*\n        Bounce\n        \n        Invert velocity and reduce by provided fraction\n    */\n    bounce: function (value) {\n        var distance = 0,\n            to = value.to,\n            current = value.current,\n            bounce = value.bounce;\n        \n        // If we're using glide simulation we have to flip our target too\n        if (value.simulate === 'glide') {\n            distance = to - current;\n            value.to = current - (distance * bounce);\n        }\n        \n        return value.velocity *= - bounce;\n    },\n    \n    /*\n        Capture\n        \n        Convert simulation to spring and set target to limit\n    */\n    capture: function (value, target) {\n        value.to = target;\n        value.simulate = 'spring';\n        value.capture = value.min = value.max = undefined;\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/simulations.js\n ** module id = 42\n ** module chunks = 0\n **/","\"use strict\";\n\nvar X = 'X',\n    Y = 'Y',\n    TRANSFORM_PERSPECTIVE = 'transformPerspective',\n    SCALE = 'scale',\n    ROTATE = 'rotate',\n\n    terms = {\n        colors: ['Red', 'Green', 'Blue', 'Alpha'],\n        positions: [X, Y, 'Z'],\n        dimensions: ['Top', 'Right', 'Bottom', 'Left'],\n        shadow: [X, Y, 'Radius', 'Spread', 'Color'],\n        valueProps: ['current', 'to', 'start', 'min', 'max'],\n        transformFuncs: ['translate', SCALE, ROTATE, 'skew', TRANSFORM_PERSPECTIVE],\n        transformProps: {} // objects are faster at direct lookups\n    };\n\n// Create transform terms\n(function () {\n    var transformFuncs = terms.transformFuncs,\n        transformProps = terms.transformProps,\n        numOfTransformFuncs = transformFuncs.length,\n        i = 0,\n\n        createProps = function (funcName) {\n            var typeTerms = terms.positions,\n                j = 0;\n\n            if (typeTerms) {\n                for (; j < typeTerms.length; j++) {\n                    transformProps[funcName + typeTerms[j]] = true;\n                }\n            }\n        };\n    \n    // Manually add skew and transform perspective  \n    transformProps[ROTATE] = transformProps[SCALE] = transformProps[TRANSFORM_PERSPECTIVE] = true;\n    \n    // Loop over each function name and create function/property terms\n    for (; i < numOfTransformFuncs; i++) {\n        createProps(transformFuncs[i]);\n    }\n})();\n\nmodule.exports = terms;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/css/dictionary.js\n ** module id = 43\n ** module chunks = 0\n **/","\"use strict\";\n\nvar dictionary = require('./dictionary.js'),\n\n    defaultValues = {\n        Alpha: 1\n    },\n\n    functionCreate = function (value, prefix) {\n        return prefix + '(' + value + ')';\n    },\n\n    createSpaceDelimited = function (key, object, terms) {\n        return createDelimitedString(key, object, terms, ' ');\n    },\n    \n    createCommaDelimited = function (key, object, terms) {\n        return createDelimitedString(key, object, terms, ', ').slice(0, -2);\n    },\n    \n    createDelimitedString = function (key, object, terms, delimiter) {\n        var string = '',\n            propKey = '',\n            termsLength = terms.length;\n        \n        for (var i = 0; i < termsLength; i++) {\n            propKey = key + terms[i];\n\n            if (object[propKey] !== undefined) {\n                string += object[propKey];\n            } else {\n                if (defaultValues[terms[i]] !== undefined) {\n                    string += defaultValues[terms[i]];\n                }\n            }\n            \n            string += delimiter;\n        }\n    \n        return string;\n    },\n\n    templates = {\n        \n        colors: function (key, values) {\n            return functionCreate(createCommaDelimited(key, values, dictionary.colors), 'rgba');\n        },\n        \n        dimensions: function (key, values) {\n            return createSpaceDelimited(key, values, dictionary.dimensions);\n        },\n        \n        positions: function (key, values) {\n            return createSpaceDelimited(key, values, dictionary.positions);\n        },\n        \n        shadow: function (key, values) {\n            var shadowTerms = dictionary.shadow.slice(0,4);\n            \n            return createSpaceDelimited(key, values, shadowTerms) + templates.colors(key, values);\n        },\n        \n        transform: function (key, values) {\n            return key + '(' + values[key] +')';\n        }\n    };\n\nmodule.exports = templates;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/css/templates.js\n ** module id = 44\n ** module chunks = 0\n **/","\"use strict\";\n\nvar COLOR = 'colors',\n    POSITIONS = 'positions',\n    TRANSFORM = 'transform',\n    DIMENSIONS = 'dimensions',\n    SHADOW = 'shadow';\n\nmodule.exports = {\n    // Color properties\n    color: COLOR,\n    backgroundColor: COLOR,\n    borderColor: COLOR,\n    borderTopColor: COLOR,\n    borderRightColor: COLOR,\n    borderBottomColor: COLOR,\n    borderLeftColor: COLOR,\n    outlineColor: COLOR,\n    fill: COLOR,\n    stroke: COLOR,\n\n    // Dimensions\n    margin: DIMENSIONS,\n    padding: DIMENSIONS,\n\n    // Positions\n    backgroundPosition: POSITIONS,\n    perspectiveOrigin: POSITIONS,\n    transformOrigin: POSITIONS,\n    \n    // Transform functions\n    skew: TRANSFORM,\n    translate: TRANSFORM,\n    rotate: TRANSFORM,\n    scale: TRANSFORM,\n    \n    // Shadows\n    textShadow: SHADOW,\n    boxShadow: SHADOW\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/css/lookup.js\n ** module id = 45\n ** module chunks = 0\n **/","\"use strict\";\n\nvar color = {\n        min: 0,\n        max: 255,\n        round: true\n    },\n    opacity = {\n        min: 0,\n        max: 1\n    },\n    angle = {\n        unit: 'deg'\n    },\n    scale = {},\n    defaults = {\n        base: {\n            unit: 'px'\n        },\n        \n        color: color,\n        Red: color,\n        Green: color,\n        Blue: color,\n    \n        Alpha: opacity,\n        opacity: opacity,\n        \n        scale: scale,\n        scaleX: scale,\n        scaleY: scale,\n        scaleZ: scale,\n        \n        skew: angle,\n        skewX: angle,\n        skewY: angle,\n        rotate: angle,\n        rotateX: angle,\n        rotateY: angle,\n        rotateZ: angle\n    };\n    \nmodule.exports = defaults;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/css/default-property.js\n ** module id = 46\n ** module chunks = 0\n **/","\"use strict\";\n\nvar dictionary = require('./dictionary.js'),\n    utils = require('../../utils/utils.js'),\n\n    /*\n        Split comma delimited into array\n        \n        Converts 255, 0, 0 -> [255, 0, 0]\n        \n        @param [string]: CSS comma delimited function\n    */\n    splitCommaDelimited = function (value) {\n        return utils.isString(value) ? value.split(/,\\s*/) : [value];\n    },\n    \n    splitSpaceDelimited = function (value) {\n        return utils.isString(value) ? value.split(' ') : [value];\n    },\n    \n    /*\n        Break values out of css functional statement\n        \n        Converts rgba(255, 0, 0) -> \"255, 0, 0\"\n    */\n    functionBreak = function (value) {\n        return value.substring(value.indexOf('(') + 1, value.lastIndexOf(')'));\n    },\n    \n    /*\n        Convert hex into array of RGBA values\n        \n        @param [string]: Hex string\n            \"#F00\" -> [255, 0, 0]\n            \"#FF0000\" -> [255, 0, 0]\n            \n        @return [array]: RGBA values\n    */\n    hex = function (prop) {\n        var r, g, b;\n                    \n        // If we have 6 chacters, ie #FF0000\n        if (prop.length > 4) {\n            r = prop.substr(1, 2);\n            g = prop.substr(3, 2);\n            b = prop.substr(5, 2);\n\n        // Or 3 characters, ie #F00\n        } else {\n            r = prop.substr(1, 1);\n            g = prop.substr(2, 1);\n            b = prop.substr(3, 1);\n            r += r;\n            g += g;\n            b += b;\n        }\n            \n        return [\n            parseInt(r, 16),\n            parseInt(g, 16),\n            parseInt(b, 16),\n            1\n        ];\n    },\n    \n    /*\n        Test if string is color property\n        \n        @param [string]: Color property\n        @return [boolean]: True if color property\n    */\n    isColor = function (prop) {\n        return (prop.indexOf('#') > -1 || prop.indexOf('rgb') > -1);\n    },\n\n    /*\n        Public splitters\n        \n        Each splitter takes a string containing certain values and\n        splits them into an object containing key/value pairs, ie\n        color will return Red/Green/Blue/[Alpha] values\n    */\n    splitters = {\n        \n        /*\n            Split arbitarily-long array (for instance matrix property) into object\n            \n            @param [string]: Array values\n                \"1, 1, 2, 4\" -> {1, 1, 2, 4}\n                \"1 1 2 4\" -> {1, 1, 2, 4}\n                \n            @return [object]: Object with a metric for every array item,\n                named after its index\n        */\n        array: function (prop) {\n            var list = (prop.indexOf(',') > -1) ? splitCommaDelimited(prop) : splitSpaceDelimited(prop),\n                listLength = list.length,\n                i = 0,\n                arrayProps = {};\n                \n            for (; i < listLength; i++) {\n                arrayProps[i] = list[i];\n            }\n            \n            return arrayProps;\n        },\n        \n        /*\n            Convert color property into R/G/B/[A] object\n            \n            @param [string]: Color value has #, rgba, rgb, // hsl, hsla\n                \"#f00\" -> {255, 0, 0}\n                \"#ff0000\" -> {255, 0, 0}\n                \"rgb(255, 0, 0)\" -> {255, 0, 0}\n                \"rgba(255, 0, 0, 1)\" -> {255, 0, 0, 1}\n                \n            @return [object]: Object with metric for each \n        */\n        colors: function (prop) {\n            var colors = (prop.indexOf('#') > -1) ? hex(prop) : splitCommaDelimited(functionBreak(prop)),\n                terms = dictionary.colors,\n                numTerms = terms.length,\n                i = 0,\n                rgba = {};\n\n            for (; i < numTerms; i++) {\n\t            colors[i] = (colors[i] || colors[i] === 0) ? colors[i] : 1;\n                rgba[terms[i]] = colors[i];\n            }\n\n            return rgba;\n        },\n    \n        /*\n            Split dimensions in format \"Top Right Bottom Left\"\n            \n            @param [string]: Dimension values\n                \"20px 0 30px 40px\" -> {20px, 0, 30px, 40px}\n                \"20px 0 30px\" -> {20px, 0, 30px, 0}\n                \"20px 0\" -> {20px, 0, 20px, 0}\n                \"20px\" -> {20px, 20px, 20px, 20px}\n            \n            @return [object]: Object with T/R/B/L metrics\n        */\n        dimensions: function (prop) {\n            var dimensions = splitSpaceDelimited(prop),\n                numDimensions = dimensions.length,\n                terms = dictionary.dimensions,\n                jumpBack = (numDimensions !== 1) ? 2 : 1,\n                i, j = i = 0,\n                dimensionProps = {};\n            \n            for (; i < 4; i++) {\n                dimensionProps[terms[i]] = dimensions[j];\n                \n                // Jump back counter j if we've reached the end of our set values\n                j++;\n                j = (j === numDimensions) ? j - jumpBack : j;\n            }\n            \n            return dimensionProps;\n        },\n        \n        /*\n            Split positions in format \"X Y Z\"\n            \n            @param [string]: Position values\n                \"20% 30% 0\" -> {20%, 30%, 0}\n                \"20% 30%\" -> {20%, 30%}\n                \"20%\" -> {20%, 20%}\n        */\n        positions: function (prop) {\n            var positions = splitSpaceDelimited(prop),\n                numPositions = positions.length,\n                positionProps = {\n                    X: positions[0],\n                    Y: (numPositions > 1) ? positions[1] : positions[0]\n                };\n                \n            if (numPositions > 2) {\n                positionProps.Z = positions[2];\n            }\n            \n            return positionProps;\n        },\n        \n        /*\n            Split shadow properties \"X, Y, Radius, Spread, Color\"\n            \n            @param [string]: Shadow property\n            @return [object]\n        */\n        shadow: function (prop) {\n            var bits = splitSpaceDelimited(prop),\n                bitsLength = bits.length,\n                terms = dictionary.shadow,\n                reachedColor,\n                colorProp = '',\n                bit, color,\n                i = 0, unit,\n                shadowProps = {};\n                \n            for (; i< bitsLength; i++) {\n                bit = bits[i];\n                \n                // If we've reached the color property, append to color string\n                if (reachedColor || isColor(bit)) {\n                    reachedColor = true;\n                    colorProp += bit;\n\n                } else {\n                    shadowProps[terms[i]] = bit;\n                }\n            }\n            \n            color = splitters.colors(colorProp);\n            \n            for (var unit in color) {\n                shadowProps[unit] = color[unit];\n            }\n            \n            return shadowProps;\n        },\n        \n        perspective: function (prop) {\n            return this.array(prop);\n        }\n    };\n\nmodule.exports = splitters;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/css/splitters.js\n ** module id = 47\n ** module chunks = 0\n **/","var STROKE = 'stroke',\n    DASH = STROKE + '-dash', // stoke-width\n    DASH_ARRAY = DASH + 'array'\n\nmodule.exports = {\n    opacity: STROKE + '-opacity',\n    width: STROKE + '-width',\n    offset: DASH + 'offset',\n    length: DASH_ARRAY,\n    spacing: DASH_ARRAY,\n    miterlimit: STROKE + '-miterlimit'\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes/path/lookup.js\n ** module id = 48\n ** module chunks = 0\n **/","\"use strict\";\n\nvar Input = require('./input.js'),\n    currentPointer, // Sort this out for multitouch\n    \n    TOUCHMOVE = 'touchmove',\n    MOUSEMOVE = 'mousemove',\n\n    /*\n        Convert event into point\n        \n        Scrape the x/y coordinates from the provided event\n        \n        @param [event]: Original pointer event\n        @param [boolean]: True if touch event\n        @return [object]: x/y coordinates of event\n    */\n    eventToPoint = function (event, isTouchEvent) {\n        var touchChanged = isTouchEvent ? event.changedTouches[0] : false;\n        \n        return {\n            x: touchChanged ? touchChanged.clientX : event.pageX,\n            y: touchChanged ? touchChanged.clientY : event.pageY\n        }\n    },\n    \n    /*\n        Get actual event\n        \n        Checks for jQuery's .originalEvent if present\n        \n        @param [event | jQuery event]\n        @return [event]: The actual JS event  \n    */\n    getActualEvent = function (event) {\n        return event.originalEvent || event;\n    },\n\n    \n    /*\n        Pointer constructor\n    */\n    Pointer = function (e) {\n        var event = getActualEvent(e), // In case of jQuery event\n            isTouch = (event.touches) ? true : false,\n            startPoint = eventToPoint(event, isTouch);\n        \n        this.update(startPoint);\n        this.isTouch = isTouch;\n        this.bindEvents();\n    },\n    \n    proto = Pointer.prototype = new Input();\n\n/*\n    Bind move event\n*/\nproto.bindEvents = function () {\n    this.moveEvent = this.isTouch ? TOUCHMOVE : MOUSEMOVE;\n    \n    currentPointer = this;\n    \n    document.documentElement.addEventListener(this.moveEvent, this.onMove);\n};\n\n/*\n    Unbind move event\n*/\nproto.unbindEvents = function () {\n    document.documentElement.removeEventListener(this.moveEvent, this.onMove);\n};\n\n/*\n    Pointer onMove event handler\n    \n    @param [event]: Pointer move event\n*/\nproto.onMove = function (e) {\n    var newPoint = eventToPoint(e, currentPointer.isTouch);\n    e = getActualEvent(e);\n    e.preventDefault();\n    currentPointer.update(newPoint);\n};\n\nproto.stop = function () {\n    this.unbindEvents();\n};\n\nmodule.exports = Pointer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/input/pointer.js\n ** module id = 49\n ** module chunks = 0\n **/","module.exports = {\n    // [number]: Current target value\n    to: undefined,\n\n    // [number]: Maximum permitted value during .track and .run\n    min: undefined,\n    \n    // [number]: Minimum permitted value during .track and .run\n    max: undefined,\n    \n    // [number]: Origin\n    origin: 0,\n    \n    // [boolean]: Set to true when both min and max detected\n    hasRange: false,\n\n    // [boolean]: Round output if true\n    round: false,\n    \n    // [string]: Route\n    route: 'values',\n    \n    // [string]: Non-namespaced output value\n    name: '',\n    \n    // [string]: Unit string to append to value on ourput\n    unit: undefined,\n    \n    parent: '',\n    \n    unitName: '',\n\n    /*\n        Link properties\n    */\n\n    // [string]: Name of value to listen to\n    link: undefined,\n    \n    // [array]: Linear range of values (eg [-100, -50, 50, 100]) of linked value to map to .mapTo\n    mapLink: undefined,\n    \n    // [array]: Non-linear range of values (eg [0, 1, 1, 0]) to map to .mapLink - here the linked value being 75 would result in a value of 0.5\n    mapTo: undefined,\n    \n\t// [number]: Factor of input movement to direct output\n\tamp: 1,\n\n\n    /*\n        .run() properties\n    */\n\n    // [string]: Simulation to .run\n    simulate: 'velocity',\n    \n    // [number]: Deceleration to apply to value, in units per second\n    deceleration: 0,\n    \n    // [number]: Acceleration to apply to value, in units per second\n    acceleration: 0,\n    \n    // [number]: Factor to multiply velocity by on bounce\n    bounce: 0,\n    \n    // [number]: Spring strength during 'string'\n    spring: 80,\n    \n    // [number]: Timeconstant of glide\n    timeConstant: 395,\n    \n    // [number]: Stop simulation under this speed\n    stopSpeed: 10,\n    \n    // [boolean]: Capture with spring physics on limit breach\n    capture: false,\n    \n    // [number]: Friction to apply per frame\n    friction: 0.05,\n\n    /*\n        .play() properties\n    */\n\n    // [number]: Duration of animation in ms\n    duration: 400,\n    \n    // [number]: Duration of delay in ms\n    delay: 0,\n    \n    // [number]: Stagger delay as factor of duration (ie 0.2 with duration of 1000ms = 200ms)\n    stagger: 0,\n    \n    // [string]: Easing to apply\n    ease: 'easeInOut',\n    \n    // [number]: Number of steps to execute animation\n    steps: 0,\n    \n    // [string]: Tells Redshift when to step, at the start or end of a step. Other option is 'start' as per CSS spec\n    stepDirection: 'end',\n\n    /*\n        .track() properties\n    */\n\n    // [number]: Factor of movement outside of maximum range (ie 0.5 will move half as much as 1)\n    escapeAmp: 0\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/defaults/value-props.js\n ** module id = 50\n ** module chunks = 0\n **/","module.exports = {\n    // [number]: Current value\n    current: 0,\n    \n    // [number]: Change per second\n    speed: 0,\n    \n    // [number]: Change per second plus direction (ie can be negative)\n    velocity: 0,\n    \n    // [number]: Amount value has changed in the most recent frame\n    frameChange: 0\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/defaults/value-state.js\n ** module id = 51\n ** module chunks = 0\n **/","/*\n    Property resolver\n    -------------------------------------\n    \n    Checks if a property being set is\n        a) a function\n        b) a relative value\n        c) a value as a unit\n    and returns the resolved value\n        \n    @param [number || string || function]: New property value\n    @param [number || string] (optional): Current property value\n    @param [object] (optional): Parent property\n    @param [object] (optional): Scope to resolve first argument if provided\n    @returns [number || string]: Resolved value\n*/\n\"use strict\";\n\nvar calc = require('./calc.js'),\n    utils = require('./utils.js');\n\nmodule.exports = function (newValue, currentValue, parent, scope) {\n    var splitValueUnit = {};\n    \n    currentValue = currentValue || 0;\n\n    // Run function if this is a function\n    if (typeof newValue == 'function') {\n        newValue = newValue.call(scope, currentValue);\n    }\n    \n    // Check if value is relative ie '+=10' - could have been returned from function\n    if (newValue && newValue.indexOf && newValue.indexOf('=') > 0) {\n        newValue = calc.relativeValue(currentValue, newValue);\n    }\n    \n    // If value is still string it might have a unit property\n    if (typeof newValue === 'string') {\n        splitValueUnit = utils.splitValUnit(newValue);\n\n        if (!isNaN(splitValueUnit.value)) {\n            newValue = splitValueUnit.value;\n            parent.unit = splitValueUnit.unit;\n        }\n    }\n\n    return newValue;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/resolve.js\n ** module id = 52\n ** module chunks = 0\n **/","/*\n    The loop\n*/\n\"use strict\";\n\nvar Timer = require('./timer.js'),\n    tick = require('./tick.js'),\n    Loop = function () {\n        this.timer = new Timer();\n    };\n    \nLoop.prototype = {\n    \n    /*\n        [boolean]: Current status of animation loop\n    */\n    isRunning: false,\n    \n    /*\n        Fire all active processes once per frame\n    */\n    frame: function () {\n        var self = this;\n        \n        tick(function () {\n            var framestamp = self.timer.update(), // Currently just measuring in ms - will look into hi-res timestamps\n                isActive = self.callback.call(self.scope, framestamp, self.timer.getElapsed());\n\n            if (isActive) {\n                self.frame(true);\n            } else {\n                self.stop();\n            }\n        });\n    },\n    \n    /*\n        Start loop\n    */\n    start: function () {\n        // Make sure we're not already running a loop\n        if (!this.isRunning) {\n            this.timer.clock();\n            this.isRunning = true;\n            this.frame();\n        }\n    },\n    \n    /*\n        Stop the loop\n    */\n    stop: function () {\n        this.isRunning = false;\n    },\n    \n    /*\n        Set the callback to run every frame\n        \n        @param [Object]: Execution context\n        @param [function]: Callback to fire\n    */\n    setCallback: function (scope, callback) {\n        this.scope = scope;\n        this.callback = callback;\n    }\n \n};\n\nmodule.exports = new Loop();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/process/loop.js\n ** module id = 53\n ** module chunks = 0\n **/","\"use strict\";\n\nvar utils = require('../utils/utils.js'),\n\n    maxElapsed = 33,\n    Timer = function () {\n        this.elapsed = 16.7;\n        this.current = utils.currentTime();\n        this.update();\n    };\n\nTimer.prototype = {\n    update: function () {\n        this.prev = this.current;\n        this.current = utils.currentTime();\n        this.elapsed = Math.min(this.current - this.prev, maxElapsed);\n\n        return this.current;\n    },\n\n    getElapsed: function () {\n        return this.elapsed;\n    },\n    \n    clock: function () {\n        this.current = utils.currentTime();\n    }\n};\n\nmodule.exports = Timer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/process/timer.js\n ** module id = 54\n ** module chunks = 0\n **/","\"use strict\";\n/*\n    requestAnimationFrame polyfill\n    \n    For IE8/9 Flinstones\n\n    Taken from Paul Irish. We've stripped out cancelAnimationFrame checks because we don't fox with that\n    \n    http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n    http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n     \n    requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\n     \n    MIT license\n*/\nvar tick,\n    lastTime = 0,\n    hasWindow = (typeof window !== 'undefined');\n\nif (!hasWindow) {\n    // Load rAF shim\n    tick = function (callback) {\n        var currTime = new Date().getTime(),\n            timeToCall = Math.max(0, 16 - (currTime - lastTime)),\n            id = setTimeout(function () {\n                callback(currTime + timeToCall);\n            }, timeToCall);\n\n        lastTime = currTime + timeToCall;\n        \n        return id;\n    };  \n    \n} else {\n    tick = window.requestAnimationFrame;\n}\n\nmodule.exports = tick;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/process/tick.js\n ** module id = 55\n ** module chunks = 0\n **/"],"sourceRoot":"","file":"redshift.global.js"}